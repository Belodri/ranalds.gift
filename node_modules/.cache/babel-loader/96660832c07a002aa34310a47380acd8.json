{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\inventory\\\\ItemSelect.js\";\nimport React, { Component } from 'react';\nimport './ItemSelect.css';\nimport { AppContext } from '../../stores/Store';\nimport { heroesData } from '../../data/Heroes';\nimport { meleeWeaponsData } from '../../data/MeleeWeapons';\nimport { rangeWeaponsData } from '../../data/RangeWeapons';\nimport WeaponIcon from './WeaponIcon';\n\nclass ItemSelect extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleItemSelectChanged = e => {\n      alert('select changed');\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.type + \"-container inventory-item-container border-01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: this.props.type + \"-header\",\n      style: {\n        textTransform: 'uppercase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, this.props.type), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.type + \"-divider divider-06\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }\n    }), this.renderItems());\n  }\n\n  renderItems() {\n    const [state] = this.context;\n\n    if (this.props.type === 'melee') {\n      return this.renderItemContainer(meleeWeaponsData, this.props.type, state.meleeId);\n    } else {\n      if (parseInt(state.careerId) === 6 || parseInt(state.careerId) === 16) {\n        return this.renderItemContainer(meleeWeaponsData, this.props.type, state.rangeId);\n      }\n\n      return this.renderItemContainer(rangeWeaponsData, this.props.type, state.rangeId);\n    }\n  }\n\n  renderItemContainer(itemsData, itemType, selectedItemId) {\n    const [state, updateState] = this.context;\n    var weaponsContainerHtml = [];\n    var hero = heroesData.find(hero => {\n      return parseInt(hero.id) === parseInt(state.careerId);\n    });\n    hero = hero ? hero : heroesData[0];\n    var heroItems = itemsData.filter(item => {\n      return item.canWield.indexOf(hero.codeName) >= 0;\n    });\n    var item = heroItems.find(item => {\n      return parseInt(item.id) === parseInt(selectedItemId);\n    });\n\n    if (!item) {\n      item = heroItems[0];\n      updateState({\n        type: \"UPDATE_ITEM_SELECT\",\n        payload: {\n          id: item.id,\n          type: itemType\n        }\n      });\n    }\n\n    for (var i = 0; i < heroItems.length; i++) {\n      item = heroItems[i];\n      weaponsContainerHtml.push(this.renderItem(item, itemType, parseInt(item.id) === parseInt(selectedItemId)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weapon-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }, weaponsContainerHtml);\n  }\n\n  renderItem(item, itemType, selected) {\n    var weaponIconClass = selected ? 'weapon-icon selected' : 'weapon-icon';\n    return /*#__PURE__*/React.createElement(WeaponIcon, {\n      key: item.id,\n      id: item.id,\n      type: itemType,\n      selected: selected,\n      handleClick: this.handleItemSelectChanged,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 12\n      }\n    });\n    /*     <div key={item.id} className=\"weapon-background\">\r\n                  <div className={item.codeName}>\r\n                      <div className={weaponIconClass} data-id={item.id} data-type={itemType} onClick={this.itemSelectChanged.bind(this)}></div>\r\n                  </div>\r\n              </div>; */\n  }\n\n  itemSelectChanged(e) {\n    alert('select changed');\n    const [state, updateState] = this.context;\n    updateState({\n      type: \"UPDATE_ITEM_SELECT\",\n      payload: {\n        id: parseInt(e.currentTarget.dataset.id),\n        type: e.currentTarget.dataset.type\n      }\n    });\n  }\n\n  handleItemClick(e) {\n    e.currentTarget.classList.add('selected');\n  }\n\n}\n\nItemSelect.contextType = AppContext;\nexport default ItemSelect;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/inventory/ItemSelect.js"],"names":["React","Component","AppContext","heroesData","meleeWeaponsData","rangeWeaponsData","WeaponIcon","ItemSelect","handleItemSelectChanged","e","alert","render","props","type","textTransform","renderItems","state","context","renderItemContainer","meleeId","parseInt","careerId","rangeId","itemsData","itemType","selectedItemId","updateState","weaponsContainerHtml","hero","find","id","heroItems","filter","item","canWield","indexOf","codeName","payload","i","length","push","renderItem","selected","weaponIconClass","itemSelectChanged","currentTarget","dataset","handleItemClick","classList","add","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './ItemSelect.css';\r\nimport { AppContext } from '../../stores/Store';\r\nimport {heroesData} from '../../data/Heroes'\r\nimport {meleeWeaponsData} from '../../data/MeleeWeapons'\r\nimport {rangeWeaponsData} from '../../data/RangeWeapons'\r\nimport WeaponIcon from './WeaponIcon';\r\n\r\nclass ItemSelect extends Component {\r\n  static contextType = AppContext;\r\n\r\n  handleItemSelectChanged = (e) => {\r\n    alert('select changed');\r\n  }\r\n\r\n\r\n  render() {\r\n    return (\r\n        <div className={this.props.type + \"-container inventory-item-container border-01\"}>\r\n            <p className={this.props.type + \"-header\"} style={{textTransform: 'uppercase'}}>{this.props.type}</p>\r\n            <div className={this.props.type + \"-divider divider-06\"}></div>\r\n            {this.renderItems()}\r\n        </div>\r\n    );\r\n  }\r\n\r\n  renderItems() {\r\n    const [state] = this.context;\r\n\r\n    if (this.props.type === 'melee') {\r\n        return this.renderItemContainer(meleeWeaponsData, this.props.type, state.meleeId);\r\n    } else {\r\n      if (parseInt(state.careerId) === 6 || parseInt(state.careerId) === 16) {\r\n        return this.renderItemContainer(meleeWeaponsData, this.props.type, state.rangeId);\r\n      }\r\n        return this.renderItemContainer(rangeWeaponsData, this.props.type, state.rangeId);\r\n    }\r\n  }\r\n\r\n  renderItemContainer(itemsData, itemType, selectedItemId) {\r\n    const [state, updateState] = this.context;\r\n    var weaponsContainerHtml = [];\r\n\r\n    var hero = heroesData.find((hero) => { return parseInt(hero.id) === parseInt(state.careerId); });\r\n    hero = hero ? hero : heroesData[0];\r\n    \r\n    var heroItems = itemsData.filter((item) => { return item.canWield.indexOf(hero.codeName) >= 0; });\r\n    \r\n    var item = heroItems.find((item) => { return parseInt(item.id) === parseInt(selectedItemId); });\r\n    if (!item) {\r\n      item = heroItems[0];\r\n        updateState({\r\n          type: \"UPDATE_ITEM_SELECT\", \r\n          payload: { \r\n              id: item.id, \r\n              type: itemType\r\n          }\r\n      });\r\n    }\r\n    \r\n    for (var i = 0; i < heroItems.length; i++) {\r\n      item = heroItems[i];\r\n      weaponsContainerHtml.push(this.renderItem(item, itemType, parseInt(item.id) === parseInt(selectedItemId)));\r\n    }\r\n\r\n    return (\r\n        <div className=\"weapon-container\">\r\n            {weaponsContainerHtml}\r\n        </div>            \r\n    );\r\n  }\r\n\r\n  renderItem(item, itemType, selected) {\r\n    var weaponIconClass = selected ? 'weapon-icon selected' : 'weapon-icon';\r\n    return <WeaponIcon key={item.id} id={item.id} type={itemType} selected={selected} handleClick={this.handleItemSelectChanged}></WeaponIcon>;\r\n    \r\n/*     <div key={item.id} className=\"weapon-background\">\r\n              <div className={item.codeName}>\r\n                  <div className={weaponIconClass} data-id={item.id} data-type={itemType} onClick={this.itemSelectChanged.bind(this)}></div>\r\n              </div>\r\n          </div>; */\r\n  }\r\n\r\n  itemSelectChanged(e) {\r\n    alert('select changed');\r\n    const [state, updateState] = this.context;\r\n    updateState({\r\n        type: \"UPDATE_ITEM_SELECT\", \r\n        payload: { \r\n            id: parseInt(e.currentTarget.dataset.id), \r\n            type: e.currentTarget.dataset.type\r\n        }\r\n    });\r\n  }\r\n\r\n  handleItemClick(e) {\r\n\r\n    e.currentTarget.classList.add('selected');\r\n  }\r\n}\r\n\r\nexport default ItemSelect;"]},"metadata":{},"sourceType":"module"}