{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\users\\\\UserPage.js\";\nimport React, { useContext } from 'react';\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\nimport { UserViewContext } from '../../stores/UserViewStore';\nimport { db } from '../../utils/Firebase';\nimport BuildList from '../buildList/BuildList';\nimport BuildListContainer from '../buildList/BuildListContainer';\nimport './UserPage.css';\n\nfunction UserPage() {\n  const [state, updateState] = useContext(UserViewContext); //show user information from database\n  //show list of builds: created by user, liked builds, team builds\n  //show total amount of likes from all builds\n\n  function userBuildsNextPage(e) {\n    alert('next page');\n    alert(`current page ${state.userBuildsCurrentPage} total pages ${state.userBuildsPageCount}`);\n\n    if (state.userBuildsCurrentPage >= state.userBuildsPageCount) {\n      alert('Current page is already last page');\n      return; // Current page is already last page\n    }\n\n    alert('getting next page of data');\n    db.collection('builds').where(\"userId\", \"==\", state.userId).orderBy('dateModified').startAfter(state.userBuildsLastDoc).limit(10).get().then(querySnapshot => {\n      var userBuilds = [];\n      querySnapshot.forEach(build => {\n        userBuilds.push({\n          id: build.id,\n          data: build.data()\n        });\n      });\n      alert('user builds size ' + querySnapshot.size);\n      updateState({\n        type: \"UPDATE_USER_BUILDS\",\n        payload: {\n          builds: userBuilds,\n          lastDoc: querySnapshot.docs[querySnapshot.docs.length - 1],\n          currentPage: state.userBuildsPageCount++,\n          totalPages: querySnapshot.size\n        }\n      });\n    });\n  }\n\n  function userBuildsPreviousPage(e) {\n    alert('previous page');\n  }\n\n  function likedBuildsNextPage(e) {\n    alert('liked next page');\n  }\n\n  function likedBuildsPreviousPage(e) {\n    alert('liked previous page');\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }, state.username), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 11\n    }\n  }, \"Steam ID\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, state.steam), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 11\n    }\n  }, \"Twitch\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, state.twitch), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, \"Date Created\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 11\n    }\n  }, new Date(state.dateCreated.seconds * 1000).toString().slice(0, 10).replace(/-/g, \"\"))), /*#__PURE__*/React.createElement(Tabs, {\n    className: \"build-lists\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    className: \"container-tabs-list\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 15\n    }\n  }, \"My Builds\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 15\n    }\n  }, \"Liked Builds\")), /*#__PURE__*/React.createElement(TabPanel, {\n    className: \"hero-summary-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BuildList, {\n    userId: state.userId,\n    handleNextPage: userBuildsNextPage.bind(this),\n    handlePreviousPage: userBuildsPreviousPage.bind(this),\n    builds: state.userBuilds,\n    filters: state.userFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(BuildList, {\n    builds: state.likedBuilds,\n    handleNextPage: likedBuildsNextPage.bind(this),\n    handlePreviousPage: likedBuildsPreviousPage.bind(this),\n    handleFilterChange: '',\n    filters: state.userFilters,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 15\n    }\n  }))));\n}\n\nexport default UserPage;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/users/UserPage.js"],"names":["React","useContext","Tab","TabList","TabPanel","Tabs","UserViewContext","db","BuildList","BuildListContainer","UserPage","state","updateState","userBuildsNextPage","e","alert","userBuildsCurrentPage","userBuildsPageCount","collection","where","userId","orderBy","startAfter","userBuildsLastDoc","limit","get","then","querySnapshot","userBuilds","forEach","build","push","id","data","size","type","payload","builds","lastDoc","docs","length","currentPage","totalPages","userBuildsPreviousPage","likedBuildsNextPage","likedBuildsPreviousPage","username","steam","twitch","Date","dateCreated","seconds","toString","slice","replace","bind","userFilters","likedBuilds"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react';\r\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\r\nimport { UserViewContext } from '../../stores/UserViewStore';\r\nimport { db } from '../../utils/Firebase';\r\nimport BuildList from '../buildList/BuildList';\r\nimport BuildListContainer from '../buildList/BuildListContainer';\r\nimport './UserPage.css';\r\n\r\nfunction UserPage() {\r\n    const [state, updateState] = useContext(UserViewContext);\r\n\r\n    //show user information from database\r\n    //show list of builds: created by user, liked builds, team builds\r\n    //show total amount of likes from all builds\r\n\r\n    function userBuildsNextPage(e) {\r\n      alert('next page');\r\n      alert(`current page ${state.userBuildsCurrentPage} total pages ${state.userBuildsPageCount}`)\r\n\r\n      if (state.userBuildsCurrentPage >= state.userBuildsPageCount) {\r\n        alert('Current page is already last page');\r\n        return; // Current page is already last page\r\n      }\r\n\r\n      alert('getting next page of data');\r\n\r\n      db.collection('builds').where(\"userId\", \"==\", state.userId).orderBy('dateModified').startAfter(state.userBuildsLastDoc).limit(10).get().then((querySnapshot) => {\r\n        var userBuilds = [];\r\n        querySnapshot.forEach((build) => {\r\n          userBuilds.push({ id: build.id, data: build.data()});\r\n        });\r\n\r\n        alert('user builds size ' + querySnapshot.size);\r\n\r\n        updateState({\r\n          type: \"UPDATE_USER_BUILDS\", \r\n          payload: {\r\n            builds: userBuilds,\r\n            lastDoc: querySnapshot.docs[querySnapshot.docs.length-1],\r\n            currentPage: state.userBuildsPageCount++,\r\n            totalPages: querySnapshot.size \r\n          }\r\n        }); \r\n      });\r\n    }\r\n    function userBuildsPreviousPage(e) {\r\n      alert('previous page');\r\n    }\r\n    function likedBuildsNextPage(e) {\r\n      alert('liked next page');\r\n    }\r\n    function likedBuildsPreviousPage(e) {\r\n      alert('liked previous page');\r\n    }\r\n\r\n    return (\r\n      <div className=\"user-page\">\r\n        <div className=\"user-info-container\">\r\n          <span type=\"text\">Username</span>\r\n          <span type=\"text\">{state.username}</span>\r\n          <span type=\"text\">Steam ID</span>\r\n          <span type=\"text\">{state.steam}</span>\r\n          <span type=\"text\">Twitch</span>\r\n          <span type=\"text\">{state.twitch}</span>\r\n          <span type=\"text\">Date Created</span>\r\n          <span type=\"text\">{new Date(state.dateCreated.seconds * 1000).toString().slice(0,10).replace(/-/g,\"\")}</span>\r\n        </div>\r\n{/*               <BuildListContainer filters={state.userFilters}></BuildListContainer>\r\n              <BuildListContainer filters={state.userFilters}></BuildListContainer> */}\r\n        <Tabs className=\"build-lists\">\r\n            <TabList className=\"container-tabs-list\">\r\n              <Tab>My Builds</Tab>\r\n              <Tab>Liked Builds</Tab>\r\n            </TabList>\r\n            <TabPanel className=\"hero-summary-tab\">\r\n              <BuildList userId={state.userId} handleNextPage={userBuildsNextPage.bind(this)} handlePreviousPage={userBuildsPreviousPage.bind(this)} builds={state.userBuilds} filters={state.userFilters}></BuildList>\r\n            </TabPanel>\r\n            <TabPanel>              \r\n              <BuildList builds={state.likedBuilds} handleNextPage={likedBuildsNextPage.bind(this)} handlePreviousPage={likedBuildsPreviousPage.bind(this)} handleFilterChange={''} filters={state.userFilters}></BuildList>\r\n            </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}