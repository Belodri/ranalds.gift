{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\ranalds.gift\\\\src\\\\components\\\\users\\\\UserPage.js\";\nimport React, { useContext, useState } from 'react';\nimport { UserContext } from '../../stores/UserStore';\nimport { UserViewContext } from '../../stores/UserViewStore';\nimport { db } from '../../utils/Firebase';\nimport BuildList from '../buildList/BuildList';\nimport './UserPage.css';\n\nfunction UserPage(props) {\n  const [state, updateState] = useContext(UserViewContext);\n  var root = document.getElementById('root');\n  root.dataset.pageName = 'userPage';\n  console.log('rendering user page for uid ' + props.userId);\n\n  if (state.userId != props.userId) {\n    db.collection('users').doc(props.userId).get().then(doc => {\n      console.log(\"Document data:\", doc.data());\n      updateState({\n        type: \"UPDATE_USER_INFO\",\n        payload: {\n          userId: props.userId,\n          username: doc.data().username,\n          steam: doc.data().steam,\n          twitch: doc.data().twitch,\n          dateCreated: doc.data().dateCreated,\n          dateModified: doc.data().dateModified\n        }\n      });\n    });\n  } //show user information from database\n  //show list of builds: created by user, liked builds, team builds\n  //show total amount of likes from all builds\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-page\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"user-info-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 11\n    }\n  }, \"Username\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 11\n    }\n  }, state.username), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }\n  }, \"Steam ID\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 11\n    }\n  }, state.steam), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 11\n    }\n  }, \"Twitch\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 11\n    }\n  }, state.twitch), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }\n  }, \"Date Created\"), /*#__PURE__*/React.createElement(\"span\", {\n    type: \"text\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 11\n    }\n  }, new Date(state.dateCreated.seconds * 1000).toString().slice(0, 10).replace(/-/g, \"\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-list-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(BuildList, {\n    userId: state.userId,\n    builds: state.userBuilds,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default UserPage;","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/components/users/UserPage.js"],"names":["React","useContext","useState","UserContext","UserViewContext","db","BuildList","UserPage","props","state","updateState","root","document","getElementById","dataset","pageName","console","log","userId","collection","doc","get","then","data","type","payload","username","steam","twitch","dateCreated","dateModified","Date","seconds","toString","slice","replace","userBuilds"],"mappings":"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","sourcesContent":["import React, { useContext, useState } from 'react';\r\nimport { UserContext } from '../../stores/UserStore';\r\nimport { UserViewContext } from '../../stores/UserViewStore';\r\nimport { db } from '../../utils/Firebase';\r\nimport BuildList from '../buildList/BuildList';\r\nimport './UserPage.css';\r\n\r\nfunction UserPage(props) {\r\n    const [state, updateState] = useContext(UserViewContext);\r\n\r\n    var root = document.getElementById('root');\r\n    root.dataset.pageName = 'userPage';\r\n    console.log('rendering user page for uid ' + props.userId);\r\n\r\n    if (state.userId != props.userId) {\r\n\r\n      db.collection('users').doc(props.userId).get().then((doc) => {\r\n        console.log(\"Document data:\", doc.data());\r\n  \r\n        updateState({\r\n          type: \"UPDATE_USER_INFO\", \r\n          payload: { \r\n            userId: props.userId,\r\n            username: doc.data().username,\r\n            steam: doc.data().steam,\r\n            twitch: doc.data().twitch,\r\n            dateCreated: doc.data().dateCreated,\r\n            dateModified: doc.data().dateModified\r\n          }\r\n        });\r\n      });\r\n\r\n    }\r\n\r\n    //show user information from database\r\n    //show list of builds: created by user, liked builds, team builds\r\n    //show total amount of likes from all builds\r\n\r\n    return (\r\n      <div className=\"user-page\">\r\n        <div className=\"user-info-container\">\r\n          <span type=\"text\">Username</span>\r\n          <span type=\"text\">{state.username}</span>\r\n          <span type=\"text\">Steam ID</span>\r\n          <span type=\"text\">{state.steam}</span>\r\n          <span type=\"text\">Twitch</span>\r\n          <span type=\"text\">{state.twitch}</span>\r\n          <span type=\"text\">Date Created</span>\r\n          <span type=\"text\">{new Date(state.dateCreated.seconds * 1000).toString().slice(0,10).replace(/-/g,\"\")}</span>\r\n        </div>\r\n        <div className=\"build-list-container\">\r\n          <BuildList userId={state.userId} builds={state.userBuilds}></BuildList>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}