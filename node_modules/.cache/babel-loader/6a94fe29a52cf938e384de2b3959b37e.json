{"ast":null,"code":"import _slicedToArray from\"C:\\\\dev\\\\New folder\\\\rg\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";import React,{useContext,useEffect,useRef}from'react';import{Tab,TabList,TabPanel,Tabs}from'react-tabs';import{UserViewContext}from'../../stores/UserViewStore';import{db}from'../../utils/Firebase';import BuildList from'../buildList/BuildList';import BuildListContainer from'../buildList/BuildListContainer';import PagedBuildList from'../buildList/PagedBuildList';import'./UserPage.css';function UserPage(props){useTraceUpdate(props);var _useContext=useContext(UserViewContext),_useContext2=_slicedToArray(_useContext,2),state=_useContext2[0],updateState=_useContext2[1];//show user information from database\n//show list of builds: created by user, liked builds, team builds\n//show total amount of likes from all builds\nfunction userBuildsNextPage(e){alert('next page');alert(\"current page \".concat(state.userBuildsCurrentPage,\" total pages \").concat(state.userBuildsPageCount));if(state.userBuildsCurrentPage>=state.userBuildsPageCount){alert('Current page is already last page');return;// Current page is already last page\n}db.collection('builds').where(\"userId\",\"==\",state.userId).orderBy('dateModified').startAfter(state.userBuildsLastDoc).limit(10).get().then(function(querySnapshot){var userBuilds=[];querySnapshot.forEach(function(build){userBuilds.push({id:build.id,data:build.data()});});var currentPage=state.userBuildsCurrentPage+1;updateState({type:\"UPDATE_USER_BUILDS\",payload:{builds:userBuilds,lastDoc:querySnapshot.docs[querySnapshot.docs.length-1],currentPage:state.userBuildsCurrentPage+1,totalPages:state.userBuildsPageCount}});});}function userBuildsPreviousPage(e){alert('previous page');}function likedBuildsNextPage(e){alert('liked next page');}function likedBuildsPreviousPage(e){alert('liked previous page');}return/*#__PURE__*/React.createElement(\"div\",{className:\"user-page background-20 border-02\"},/*#__PURE__*/React.createElement(\"div\",{className:\"user-info-container background-14 border-08\"},/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},\"Username\"),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},state.username),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},\"Steam ID\"),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},state.steam),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},\"Twitch\"),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},state.twitch),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},\"Date Created\"),/*#__PURE__*/React.createElement(\"span\",{type:\"text\"},new Date(state.dateCreated.seconds*1000).toString().slice(0,10).replace(/-/g,\"\"))),/*#__PURE__*/React.createElement(Tabs,{className:\"user-build-lists\"},/*#__PURE__*/React.createElement(TabList,{className:\"container-tabs-list\"},/*#__PURE__*/React.createElement(Tab,null,\"My Builds\"),/*#__PURE__*/React.createElement(Tab,null,\"Liked Builds\")),/*#__PURE__*/React.createElement(TabPanel,{className:\"hero-summary-tab\"},/*#__PURE__*/React.createElement(BuildList,{userId:state.userId,handleNextPage:userBuildsNextPage.bind(this),handlePreviousPage:userBuildsPreviousPage.bind(this),builds:state.userBuilds,filters:state.userFilters})),/*#__PURE__*/React.createElement(TabPanel,null,/*#__PURE__*/React.createElement(BuildList,{builds:state.likedBuilds,handleNextPage:likedBuildsNextPage.bind(this),handlePreviousPage:likedBuildsPreviousPage.bind(this),handleFilterChange:'',filters:state.userFilters}))));}function useTraceUpdate(props){var prev=useRef(props);useEffect(function(){var changedProps=Object.entries(props).reduce(function(ps,_ref){var _ref2=_slicedToArray(_ref,2),k=_ref2[0],v=_ref2[1];if(prev.current[k]!==v){ps[k]=[prev.current[k],v];}return ps;},{});if(Object.keys(changedProps).length>0){console.log('Changed props:',changedProps);}prev.current=props;});}export default UserPage;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/users/UserPage.js"],"names":["React","useContext","useEffect","useRef","Tab","TabList","TabPanel","Tabs","UserViewContext","db","BuildList","BuildListContainer","PagedBuildList","UserPage","props","useTraceUpdate","state","updateState","userBuildsNextPage","e","alert","userBuildsCurrentPage","userBuildsPageCount","collection","where","userId","orderBy","startAfter","userBuildsLastDoc","limit","get","then","querySnapshot","userBuilds","forEach","build","push","id","data","currentPage","type","payload","builds","lastDoc","docs","length","totalPages","userBuildsPreviousPage","likedBuildsNextPage","likedBuildsPreviousPage","username","steam","twitch","Date","dateCreated","seconds","toString","slice","replace","bind","userFilters","likedBuilds","prev","changedProps","Object","entries","reduce","ps","k","v","current","keys","console","log"],"mappings":"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","sourcesContent":["import React, { useContext, useEffect, useRef } from 'react';\r\nimport { Tab, TabList, TabPanel, Tabs } from 'react-tabs';\r\nimport { UserViewContext } from '../../stores/UserViewStore';\r\nimport { db } from '../../utils/Firebase';\r\nimport BuildList from '../buildList/BuildList';\r\nimport BuildListContainer from '../buildList/BuildListContainer';\r\nimport PagedBuildList from '../buildList/PagedBuildList';\r\nimport './UserPage.css';\r\n\r\nfunction UserPage(props) {\r\n  useTraceUpdate(props);\r\n    const [state, updateState] = useContext(UserViewContext);\r\n\r\n    //show user information from database\r\n    //show list of builds: created by user, liked builds, team builds\r\n    //show total amount of likes from all builds\r\n\r\n    function userBuildsNextPage(e) {\r\n      alert('next page');\r\n      alert(`current page ${state.userBuildsCurrentPage} total pages ${state.userBuildsPageCount}`)\r\n\r\n      if (state.userBuildsCurrentPage >= state.userBuildsPageCount) {\r\n        alert('Current page is already last page');\r\n        return; // Current page is already last page\r\n      }\r\n\r\n      db.collection('builds').where(\"userId\", \"==\", state.userId).orderBy('dateModified').startAfter(state.userBuildsLastDoc).limit(10).get().then((querySnapshot) => {\r\n        var userBuilds = [];\r\n        querySnapshot.forEach((build) => {\r\n          userBuilds.push({ id: build.id, data: build.data()});\r\n        });\r\n\r\n        var currentPage = state.userBuildsCurrentPage + 1;\r\n\r\n        updateState({\r\n          type: \"UPDATE_USER_BUILDS\", \r\n          payload: {\r\n            builds: userBuilds,\r\n            lastDoc: querySnapshot.docs[querySnapshot.docs.length-1],\r\n            currentPage: state.userBuildsCurrentPage + 1,\r\n            totalPages:  state.userBuildsPageCount\r\n          }\r\n        }); \r\n      });\r\n    }\r\n    function userBuildsPreviousPage(e) {\r\n      alert('previous page');\r\n    }\r\n    function likedBuildsNextPage(e) {\r\n      alert('liked next page');\r\n    }\r\n    function likedBuildsPreviousPage(e) {\r\n      alert('liked previous page');\r\n    }\r\n\r\n    return (\r\n      <div className=\"user-page background-20 border-02\">\r\n        <div className=\"user-info-container background-14 border-08\">\r\n          <span type=\"text\">Username</span>\r\n          <span type=\"text\">{state.username}</span>\r\n          <span type=\"text\">Steam ID</span>\r\n          <span type=\"text\">{state.steam}</span>\r\n          <span type=\"text\">Twitch</span>\r\n          <span type=\"text\">{state.twitch}</span>\r\n          <span type=\"text\">Date Created</span>\r\n          <span type=\"text\">{new Date(state.dateCreated.seconds * 1000).toString().slice(0,10).replace(/-/g,\"\")}</span>\r\n        </div>\r\n{/*               <PagedBuildList></PagedBuildList>\r\n              <BuildList builds={state.likedBuilds} handleNextPage={likedBuildsNextPage.bind(this)} handlePreviousPage={likedBuildsPreviousPage.bind(this)} handleFilterChange={''} filters={state.userFilters}></BuildList> */}\r\n{/*               <BuildListContainer filters={state.userFilters}></BuildListContainer>\r\n              <BuildListContainer filters={state.userFilters}></BuildListContainer> */}\r\n        <Tabs className=\"user-build-lists\">\r\n            <TabList className=\"container-tabs-list\">\r\n              <Tab>My Builds</Tab>\r\n              <Tab>Liked Builds</Tab>\r\n            </TabList>\r\n            <TabPanel className=\"hero-summary-tab\">\r\n              {/* <PagedBuildList></PagedBuildList> */}\r\n              <BuildList userId={state.userId} handleNextPage={userBuildsNextPage.bind(this)} handlePreviousPage={userBuildsPreviousPage.bind(this)} builds={state.userBuilds} filters={state.userFilters}></BuildList>\r\n            </TabPanel>\r\n            <TabPanel>              \r\n              <BuildList builds={state.likedBuilds} handleNextPage={likedBuildsNextPage.bind(this)} handlePreviousPage={likedBuildsPreviousPage.bind(this)} handleFilterChange={''} filters={state.userFilters}></BuildList>\r\n            </TabPanel>\r\n        </Tabs>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  function useTraceUpdate(props) {\r\n    const prev = useRef(props);\r\n    useEffect(() => {\r\n      const changedProps = Object.entries(props).reduce((ps, [k, v]) => {\r\n        if (prev.current[k] !== v) {\r\n          ps[k] = [prev.current[k], v];\r\n        }\r\n        return ps;\r\n      }, {});\r\n      if (Object.keys(changedProps).length > 0) {\r\n        console.log('Changed props:', changedProps);\r\n      }\r\n      prev.current = props;\r\n    });\r\n  }\r\n\r\nexport default UserPage;"]},"metadata":{},"sourceType":"module"}