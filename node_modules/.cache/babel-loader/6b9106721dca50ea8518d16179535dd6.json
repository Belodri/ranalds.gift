{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\buildPage\\\\EditBuildPage.js\";\nimport React, { useContext } from 'react';\nimport HeroTalents from '../heroTalents/HeroTalents';\nimport Inventory from '../inventory/Inventory';\nimport './EditBuildPage.css';\nimport HeroDetails from '../heroDetails/HeroDetails';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport BuildOptions from './BuildOptions';\nimport BuildSummary from './BuildSummary';\nimport { AppContext } from '../../stores/Store';\nimport HeroSelect from '../heroSelect/HeroSelect';\nimport { useParams, useRouteMatch } from 'react-router';\nimport { auth, db, firebase } from '../../utils/Firebase';\nimport * as Constants from '../../data/Constants';\nimport history from '../../utils/History';\nimport { UserContext } from '../../stores/UserStore';\nimport { Link } from 'react-router-dom';\nimport BuildInformation from './BuildInformation';\n\nfunction EditBuildPage() {\n  const [state, updateState] = useContext(AppContext);\n  const userState = useContext(UserContext);\n  const {\n    path\n  } = useRouteMatch();\n  var paths = path.split('/');\n  var currentPath = paths[paths.length - 1];\n  console.log('current path ' + currentPath);\n\n  if (currentPath === 'edit') {\n    if (state.readonly) {\n      updateState({\n        type: \"UPDATE_READONLY\",\n        payload: false\n      });\n    }\n  } else if (currentPath === 'view') {\n    if (!state.readonly) {\n      updateState({\n        type: \"UPDATE_READONLY\",\n        payload: true\n      });\n    }\n  } else if (currentPath === 'create') {\n    if (!state.createBuild) {\n      updateState({\n        type: \"UPDATE_CREATE_BUILD_STATE\",\n        payload: true\n      });\n    }\n  }\n\n  let params = useParams();\n  console.log(!userState.userId);\n  console.log('params build id: ' + params.buildId);\n  var root = document.getElementById('root');\n  root.dataset.pageName = 'editBuildPage';\n\n  if (params.buildId && state.buildId !== params.buildId) {\n    loadBuild(params.buildId);\n  }\n\n  function loadBuild(buildId) {\n    console.log('loading build id ' + buildId);\n\n    if (state.buildId !== buildId) {\n      state.buildId = buildId;\n    }\n\n    db.collection('builds').doc(buildId).get().then(build => {\n      if (!build.data()) {\n        console.log('No build found with ID ' + buildId); //history.push('/build/create');\n        //update state to indicate no build available in DB\n\n        return;\n      }\n\n      console.log('build loaded from db:');\n      console.log(build.data());\n      updateState({\n        type: 'INIT_STATE_FROM_DATA',\n        payload: build\n      });\n    }).catch(error => {\n      console.error('Error retrieving data from DB:', error);\n    });\n  }\n\n  function handleDescriptionChanged(e) {\n    updateState({\n      type: \"UPDATE_DESCRIPTION\",\n      payload: e.currentTarget.value\n    });\n  }\n\n  function handleNameChange(e) {\n    updateState({\n      type: \"UPDATE_NAME\",\n      payload: e.currentTarget.value\n    });\n  }\n\n  function saveBuildClick() {\n    if (!auth.currentUser) {\n      alert('Can\\'t save or create builds when not authenticated.');\n      return;\n    }\n\n    if (!state.dirty) {\n      console.log('Not saving build, no changes have been made.');\n      return;\n    }\n\n    console.log('saving build to database build id ' + state.buildId + ' for user id ' + auth.currentUser.uid);\n\n    if (state.buildId === 0) {\n      createBuild();\n    } else {\n      saveBuild();\n    }\n  }\n\n  function createBuild() {\n    console.log('Creating new build.');\n    let increment = 1; //firebase.firestore.FieldValue.increment(1);\n\n    let batch = db.batch();\n    batch.set(db.collection('builds').doc('stats'), {\n      careers: [{\n        id: state.careerId,\n        count: increment,\n        weapons: [{\n          id: state.primaryWeaponId,\n          count: increment,\n          properties: [{\n            id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\n            count: increment\n          }, {\n            id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\n            count: increment\n          }],\n          traits: [{\n            id: state.traits[Constants.PRIMARY_TRAIT_INDEX],\n            count: increment\n          }]\n        }, {\n          id: state.secondaryWeaponId,\n          count: increment,\n          properties: [{\n            id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\n            count: increment\n          }, {\n            id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\n            count: increment\n          }],\n          traits: [{\n            id: state.traits[Constants.SECONDARY_TRAIT_INDEX],\n            count: increment\n          }]\n        }]\n      }]\n    }, {\n      merge: true\n    });\n    batch.set(db.collection('builds').doc(), {\n      careerId: state.careerId,\n      primaryWeapon: {\n        id: state.primaryWeaponId,\n        property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\n      },\n      secondaryWeapon: {\n        id: state.secondaryWeaponId,\n        property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\n      },\n      necklace: {\n        property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\n      },\n      charm: {\n        property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\n      },\n      trinket: {\n        property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\n      },\n      talent1: state.talents[Constants.TALENT_TIER_1],\n      talent2: state.talents[Constants.TALENT_TIER_2],\n      talent3: state.talents[Constants.TALENT_TIER_3],\n      talent4: state.talents[Constants.TALENT_TIER_4],\n      talent5: state.talents[Constants.TALENT_TIER_5],\n      talent6: state.talents[Constants.TALENT_TIER_6],\n      name: state.name,\n      description: state.description,\n      difficulties: state.difficulties.map(item => {\n        return item.id;\n      }),\n      missions: state.missions.map(item => {\n        return item.id;\n      }),\n      potions: state.potions.map(item => {\n        return item.id;\n      }),\n      roles: state.roles.map(item => {\n        return item.id;\n      }),\n      books: state.books.map(item => {\n        return item.id;\n      }),\n      likeCount: 0,\n      dateCreated: new Date(),\n      dateModified: new Date(),\n      userId: auth.currentUser.uid,\n      username: auth.currentUser.displayName,\n      videos: state.videos,\n      isDeleted: false\n    });\n    batch.commit();\n    /*             db.collection('builds').doc('stats').set({\r\n                    careers: [\r\n                        {\r\n                            id: state.careerId,\r\n                            count: increment,\r\n                            weapons: [\r\n                                {\r\n                                    id: state.primaryWeaponId,\r\n                                    count: increment,\r\n                                    properties: [\r\n                                        {\r\n                                            id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                                            count: increment\r\n                                        },\r\n                                        {\r\n                                            id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                                            count: increment\r\n                                        }\r\n                                    ],\r\n                                    traits: [\r\n                                        {\r\n                                            id: state.traits[Constants.PRIMARY_TRAIT_INDEX],\r\n                                            count: increment\r\n                                        }\r\n                                    ]\r\n                                },\r\n                                {\r\n                                    id: state.secondaryWeaponId,\r\n                                    count: increment,\r\n                                    properties: [\r\n                                        {\r\n                                            id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                                            count: increment\r\n                                        },\r\n                                        {\r\n                                            id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                                            count: increment\r\n                                        }\r\n                                    ],\r\n                                    traits: [\r\n                                        {\r\n                                            id: state.traits[Constants.SECONDARY_TRAIT_INDEX],\r\n                                            count: increment\r\n                                        }\r\n                                    ]\r\n                                }\r\n                            ]\r\n                        }\r\n                    ]\r\n                }); */\n\n    /*             db.collection('builds').add({\r\n                    careerId: state.careerId,                    \r\n                    primaryWeapon: {\r\n                        id: state.primaryWeaponId,\r\n                        property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                        property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                        traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\r\n                    },\r\n                    secondaryWeapon: {\r\n                        id: state.secondaryWeaponId,\r\n                        property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                        property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                        traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\r\n                    },\r\n                    necklace: {\r\n                        property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                        property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                        traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\r\n                    },\r\n                    charm: {\r\n                        property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                        property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                        traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\r\n                    },\r\n                    trinket: {\r\n                        property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                        property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                        traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\r\n                    },\r\n                    talent1: state.talents[Constants.TALENT_TIER_1],\r\n                    talent2: state.talents[Constants.TALENT_TIER_2],\r\n                    talent3: state.talents[Constants.TALENT_TIER_3],\r\n                    talent4: state.talents[Constants.TALENT_TIER_4],\r\n                    talent5: state.talents[Constants.TALENT_TIER_5],\r\n                    talent6: state.talents[Constants.TALENT_TIER_6],\r\n                    name: state.name,\r\n                    description: state.description,\r\n                    difficulties: state.difficulties,\r\n                    missions: state.missions,\r\n                    potions: state.potions,\r\n                    roles: state.roles,\r\n                    books: state.books,\r\n                    likeCount: 0,\r\n                    dateCreated: new Date(),\r\n                    dateModified: new Date(),\r\n                    userId: auth.currentUser.uid,\r\n                    username: auth.currentUser.displayName,\r\n                    videos: state.videos,\r\n                    isDeleted: false\r\n                }).then((docRef) => {\r\n                    console.log(\"Document written with ID: \", docRef.id);\r\n                    history.push('/build/' + docRef.id + '/edit');\r\n    \r\n                    //redirect to build edit page here\r\n    \r\n                }).catch((error) => {\r\n                    console.error(\"Error adding document: \", error);\r\n                }); */\n  }\n\n  function saveBuild() {\n    console.log('updating build, current state:');\n    console.log(state);\n\n    if (state.userId !== auth.currentUser.uid) {\n      alert('You can\\'t edit a build you didn\\'t create.');\n      return;\n    }\n\n    let buildDataRef = db.collection('builds').doc(state.buildId);\n    buildDataRef.set({\n      careerId: state.careerId,\n      primaryWeapon: {\n        id: state.primaryWeaponId,\n        property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\n      },\n      secondaryWeapon: {\n        id: state.secondaryWeaponId,\n        property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\n      },\n      necklace: {\n        property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\n      },\n      charm: {\n        property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\n      },\n      trinket: {\n        property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\n        property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\n        traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\n      },\n\n      /*                     primaryWeaponId: state.primaryWeaponId,\r\n                      primaryWeaponProperty1: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                      primaryWeaponProperty2:state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                      primaryWeaponTrait: state.traits[Constants.PRIMARY_TRAIT_INDEX],\r\n                      secondaryWeaponId: state.secondaryWeaponId,\r\n                      secondaryWeaponProperty1: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                      secondaryWeaponProperty2: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                      secondaryWeaponTrait: state.traits[Constants.SECONDARY_TRAIT_INDEX],\r\n                      necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                      necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                      necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\r\n                      charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                      charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                      charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\r\n                      trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                      trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                      trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX], */\n      talent1: state.talents[Constants.TALENT_TIER_1],\n      talent2: state.talents[Constants.TALENT_TIER_2],\n      talent3: state.talents[Constants.TALENT_TIER_3],\n      talent4: state.talents[Constants.TALENT_TIER_4],\n      talent5: state.talents[Constants.TALENT_TIER_5],\n      talent6: state.talents[Constants.TALENT_TIER_6],\n      name: state.name,\n      description: state.description,\n      difficulties: state.difficulties.map(item => {\n        return item.id;\n      }),\n      missions: state.missions.map(item => {\n        return item.id;\n      }),\n      potions: state.potions.map(item => {\n        return item.id;\n      }),\n      roles: state.roles.map(item => {\n        return item.id;\n      }),\n      books: state.books.map(item => {\n        return item.id;\n      }),\n      dateModified: new Date(),\n      //userId: auth.currentUser.uid,\n      //username: auth.currentUser.displayName,\n      //TODO - ensure that username is updated for each build when user edits their username\n      videos: state.videos,\n      isDeleted: false\n    }, {\n      merge: true\n    }).then(() => {\n      console.log(\"Document updated with ID: \", state.buildId);\n      updateState({\n        type: \"UPDATE_DIRTY\",\n        payload: false\n      });\n      var buildSaveIndicator = document.getElementById('buildSaveIndicator');\n      buildSaveIndicator.classList.add('saved');\n      setTimeout(() => {\n        buildSaveIndicator.classList.remove('saved');\n      }, 4000);\n    }).catch(error => {\n      console.error(\"Error updating document: \", error);\n    });\n  } //get build id param\n  //if empty, load nothing from DB\n  //if not empty, load build from DB and updatestate\n  //saving builds with /create/ url saves new db item and redirects to /buildId/edit page\n  //saving builds with /edit/ url just updates the record in the db\n\n\n  if (!state.isFromDb && !state.createBuild) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-build-page\",\n      \"data-readonly\": state.readonly,\n      \"data-dirty\": state.dirty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 453,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 454,\n        columnNumber: 21\n      }\n    }, \"No build found\"));\n  }\n\n  if (!auth.currentUser) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-build-page\",\n      \"data-readonly\": state.readonly,\n      \"data-dirty\": state.dirty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 460,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 461,\n        columnNumber: 21\n      }\n    }, \"You must be logged in to edit builds\"));\n  }\n\n  if (!state.createBuild && state.userId !== auth.currentUser.uid) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"edit-build-page\",\n      \"data-readonly\": state.readonly,\n      \"data-dirty\": state.dirty,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 467,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 468,\n        columnNumber: 21\n      }\n    }, \"Cannot edit build that you didn't create\"));\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-build-page build-page\",\n    \"data-liked\": state.isLiked,\n    \"data-readonly\": state.readonly,\n    \"data-dirty\": state.dirty,\n    \"data-fresh\": state.createBuild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 473,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"buildSaveIndicator\",\n    className: \"border-03 background-18\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 474,\n      columnNumber: 17\n    }\n  }, \"Build saved...\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 475,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-buttons-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 476,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    id: \"saveBuildButton\",\n    className: \"button-01 border-04\",\n    onClick: saveBuildClick.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 25\n    }\n  }, \"Save Build\")), /*#__PURE__*/React.createElement(HeroSelect, {\n    careerId: state.careerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 481,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 482,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 483,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 484,\n      columnNumber: 29\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 485,\n      columnNumber: 29\n    }\n  }, \"Videos\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 486,\n      columnNumber: 29\n    }\n  }, \"Combos\")), /*#__PURE__*/React.createElement(TabPanel, {\n    className: \"build-summary-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 489,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(HeroDetails, {\n    careerId: state.careerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    className: \"build-name-input border-02 background-18\",\n    placeholder: \"Name your build\",\n    value: state.name,\n    onChange: handleNameChange.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"input-build-description border-02 background-18\",\n    wrap: \"hard\",\n    placeholder: \"Describe your build\",\n    value: state.description,\n    onChange: handleDescriptionChanged.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(BuildInformation, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 493,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(BuildOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 494,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(BuildSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 496,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 498,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-additional-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 499,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-talents-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 507,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HeroTalents, {\n    contextActionType: \"UPDATE_TALENTS\",\n    careerId: state.careerId,\n    talents: state.talents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 508,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-right-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 511,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Inventory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default EditBuildPage;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/buildPage/EditBuildPage.js"],"names":["React","useContext","HeroTalents","Inventory","HeroDetails","Tab","Tabs","TabList","TabPanel","BuildOptions","BuildSummary","AppContext","HeroSelect","useParams","useRouteMatch","auth","db","firebase","Constants","history","UserContext","Link","BuildInformation","EditBuildPage","state","updateState","userState","path","paths","split","currentPath","length","console","log","readonly","type","payload","createBuild","params","userId","buildId","root","document","getElementById","dataset","pageName","loadBuild","collection","doc","get","then","build","data","catch","error","handleDescriptionChanged","e","currentTarget","value","handleNameChange","saveBuildClick","currentUser","alert","dirty","uid","saveBuild","increment","batch","set","careers","id","careerId","count","weapons","primaryWeaponId","properties","PRIMARY_PROPERTY1_INDEX","PRIMARY_PROPERTY2_INDEX","traits","PRIMARY_TRAIT_INDEX","secondaryWeaponId","SECONDARY_PROPERTY1_INDEX","SECONDARY_PROPERTY2_INDEX","SECONDARY_TRAIT_INDEX","merge","primaryWeapon","property1Id","property2Id","traitId","secondaryWeapon","necklace","NECKLACE_PROPERTY1_INDEX","NECKLACE_PROPERTY2_INDEX","NECKLACE_TRAIT_INDEX","charm","CHARM_PROPERTY1_INDEX","CHARM_PROPERTY2_INDEX","CHARM_TRAIT_INDEX","trinket","TRINKET_PROPERTY1_INDEX","TRINKET_PROPERTY2_INDEX","TRINKET_TRAIT_INDEX","talent1","talents","TALENT_TIER_1","talent2","TALENT_TIER_2","talent3","TALENT_TIER_3","talent4","TALENT_TIER_4","talent5","TALENT_TIER_5","talent6","TALENT_TIER_6","name","description","difficulties","map","item","missions","potions","roles","books","likeCount","dateCreated","Date","dateModified","username","displayName","videos","isDeleted","commit","buildDataRef","buildSaveIndicator","classList","add","setTimeout","remove","isFromDb","isLiked","bind"],"mappings":"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","sourcesContent":["import React, {useContext} from 'react';\r\nimport HeroTalents from '../heroTalents/HeroTalents'\r\nimport Inventory from '../inventory/Inventory'\r\nimport './EditBuildPage.css';\r\nimport HeroDetails from '../heroDetails/HeroDetails';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport BuildOptions from './BuildOptions';\r\nimport BuildSummary from './BuildSummary';\r\nimport { AppContext } from '../../stores/Store';\r\nimport HeroSelect from '../heroSelect/HeroSelect';\r\nimport { useParams, useRouteMatch } from 'react-router';\r\nimport { auth, db, firebase } from '../../utils/Firebase';\r\nimport * as Constants from '../../data/Constants';\r\nimport history from '../../utils/History';\r\nimport { UserContext } from '../../stores/UserStore';\r\nimport { Link } from 'react-router-dom';\r\nimport BuildInformation from './BuildInformation';\r\n\r\nfunction EditBuildPage() {\r\n\r\n        const [state, updateState] = useContext(AppContext);\r\n        const userState = useContext(UserContext);\r\n\r\n        const { path } = useRouteMatch();\r\n        var paths = path.split('/');\r\n\r\n        var currentPath = paths[paths.length-1];\r\n        console.log('current path ' + currentPath);\r\n\r\n        if (currentPath === 'edit') {\r\n            if (state.readonly) {\r\n                updateState({\r\n                    type: \"UPDATE_READONLY\", \r\n                    payload: false\r\n                });\r\n            }\r\n        } \r\n        else if (currentPath === 'view') {\r\n            if (!state.readonly) {\r\n                updateState({\r\n                    type: \"UPDATE_READONLY\", \r\n                    payload: true\r\n                });\r\n            }\r\n        }\r\n        else if (currentPath === 'create') {\r\n            if (!state.createBuild) {\r\n                updateState({\r\n                    type: \"UPDATE_CREATE_BUILD_STATE\",\r\n                    payload: true\r\n                });\r\n            }\r\n        }\r\n\r\n        let params = useParams();\r\n\r\n        console.log(!userState.userId);\r\n        console.log('params build id: ' + params.buildId);\r\n\r\n        var root = document.getElementById('root');\r\n        root.dataset.pageName = 'editBuildPage';\r\n\r\n        if (params.buildId && state.buildId !== params.buildId) {\r\n            loadBuild(params.buildId);\r\n        }\r\n\r\n        function loadBuild(buildId) {\r\n            console.log('loading build id ' + buildId);\r\n            if (state.buildId !== buildId) {\r\n                state.buildId = buildId;\r\n            }\r\n\r\n            db.collection('builds').doc(buildId).get().then((build) => {\r\n                if (!build.data()) {\r\n                    console.log('No build found with ID ' + buildId);\r\n                    //history.push('/build/create');\r\n\r\n                    //update state to indicate no build available in DB\r\n                    return;\r\n                }\r\n\r\n                console.log('build loaded from db:');\r\n                console.log(build.data());\r\n\r\n                updateState({\r\n                    type: 'INIT_STATE_FROM_DATA', \r\n                    payload: build\r\n                });\r\n            }).catch((error) => {\r\n                console.error('Error retrieving data from DB:', error);\r\n            });\r\n\r\n        }\r\n\r\n        function handleDescriptionChanged(e) {\r\n            updateState({\r\n                type: \"UPDATE_DESCRIPTION\", \r\n                payload: e.currentTarget.value\r\n            });\r\n        }\r\n\r\n        function handleNameChange(e) {\r\n            updateState({\r\n                type: \"UPDATE_NAME\", \r\n                payload: e.currentTarget.value\r\n            });\r\n        }\r\n\r\n        function saveBuildClick() {\r\n            \r\n            if (!auth.currentUser) {\r\n                alert('Can\\'t save or create builds when not authenticated.');\r\n                return;\r\n            }\r\n\r\n            if (!state.dirty) {\r\n                console.log('Not saving build, no changes have been made.');\r\n                return;\r\n            }\r\n\r\n            console.log('saving build to database build id ' + state.buildId + ' for user id ' + auth.currentUser.uid);\r\n\r\n            if (state.buildId === 0) {\r\n                createBuild();\r\n            }\r\n            else {\r\n                saveBuild();\r\n            }\r\n        }\r\n\r\n        function createBuild() {\r\n            console.log('Creating new build.');\r\n            let increment = 1;//firebase.firestore.FieldValue.increment(1);\r\n\r\n            let batch = db.batch();\r\n\r\n            batch.set(db.collection('builds').doc('stats'), {\r\n                careers: [\r\n                    {\r\n                        id: state.careerId,\r\n                        count: increment,\r\n                        weapons: [\r\n                            {\r\n                                id: state.primaryWeaponId,\r\n                                count: increment,\r\n                                properties: [\r\n                                    {\r\n                                        id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                                        count: increment\r\n                                    },\r\n                                    {\r\n                                        id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ],\r\n                                traits: [\r\n                                    {\r\n                                        id: state.traits[Constants.PRIMARY_TRAIT_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                id: state.secondaryWeaponId,\r\n                                count: increment,\r\n                                properties: [\r\n                                    {\r\n                                        id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                                        count: increment\r\n                                    },\r\n                                    {\r\n                                        id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ],\r\n                                traits: [\r\n                                    {\r\n                                        id: state.traits[Constants.SECONDARY_TRAIT_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }, {merge: true});\r\n            batch.set(db.collection('builds').doc(), {\r\n                careerId: state.careerId,                    \r\n                primaryWeapon: {\r\n                    id: state.primaryWeaponId,\r\n                    property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\r\n                },\r\n                secondaryWeapon: {\r\n                    id: state.secondaryWeaponId,\r\n                    property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\r\n                },\r\n                necklace: {\r\n                    property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\r\n                },\r\n                charm: {\r\n                    property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\r\n                },\r\n                trinket: {\r\n                    property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\r\n                },\r\n                talent1: state.talents[Constants.TALENT_TIER_1],\r\n                talent2: state.talents[Constants.TALENT_TIER_2],\r\n                talent3: state.talents[Constants.TALENT_TIER_3],\r\n                talent4: state.talents[Constants.TALENT_TIER_4],\r\n                talent5: state.talents[Constants.TALENT_TIER_5],\r\n                talent6: state.talents[Constants.TALENT_TIER_6],\r\n                name: state.name,\r\n                description: state.description,\r\n                difficulties: state.difficulties.map((item) => { return item.id }),\r\n                missions: state.missions.map((item) => { return item.id }),\r\n                potions: state.potions.map((item) => { return item.id }),\r\n                roles: state.roles.map((item) => { return item.id }),\r\n                books: state.books.map((item) => { return item.id }),\r\n                likeCount: 0,\r\n                dateCreated: new Date(),\r\n                dateModified: new Date(),\r\n                userId: auth.currentUser.uid,\r\n                username: auth.currentUser.displayName,\r\n                videos: state.videos,\r\n                isDeleted: false\r\n            });\r\n            batch.commit();\r\n\r\n/*             db.collection('builds').doc('stats').set({\r\n                careers: [\r\n                    {\r\n                        id: state.careerId,\r\n                        count: increment,\r\n                        weapons: [\r\n                            {\r\n                                id: state.primaryWeaponId,\r\n                                count: increment,\r\n                                properties: [\r\n                                    {\r\n                                        id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                                        count: increment\r\n                                    },\r\n                                    {\r\n                                        id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ],\r\n                                traits: [\r\n                                    {\r\n                                        id: state.traits[Constants.PRIMARY_TRAIT_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ]\r\n                            },\r\n                            {\r\n                                id: state.secondaryWeaponId,\r\n                                count: increment,\r\n                                properties: [\r\n                                    {\r\n                                        id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                                        count: increment\r\n                                    },\r\n                                    {\r\n                                        id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ],\r\n                                traits: [\r\n                                    {\r\n                                        id: state.traits[Constants.SECONDARY_TRAIT_INDEX],\r\n                                        count: increment\r\n                                    }\r\n                                ]\r\n                            }\r\n                        ]\r\n                    }\r\n                ]\r\n            }); */\r\n\r\n/*             db.collection('builds').add({\r\n                careerId: state.careerId,                    \r\n                primaryWeapon: {\r\n                    id: state.primaryWeaponId,\r\n                    property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\r\n                },\r\n                secondaryWeapon: {\r\n                    id: state.secondaryWeaponId,\r\n                    property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\r\n                },\r\n                necklace: {\r\n                    property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\r\n                },\r\n                charm: {\r\n                    property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\r\n                },\r\n                trinket: {\r\n                    property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\r\n                },\r\n                talent1: state.talents[Constants.TALENT_TIER_1],\r\n                talent2: state.talents[Constants.TALENT_TIER_2],\r\n                talent3: state.talents[Constants.TALENT_TIER_3],\r\n                talent4: state.talents[Constants.TALENT_TIER_4],\r\n                talent5: state.talents[Constants.TALENT_TIER_5],\r\n                talent6: state.talents[Constants.TALENT_TIER_6],\r\n                name: state.name,\r\n                description: state.description,\r\n                difficulties: state.difficulties,\r\n                missions: state.missions,\r\n                potions: state.potions,\r\n                roles: state.roles,\r\n                books: state.books,\r\n                likeCount: 0,\r\n                dateCreated: new Date(),\r\n                dateModified: new Date(),\r\n                userId: auth.currentUser.uid,\r\n                username: auth.currentUser.displayName,\r\n                videos: state.videos,\r\n                isDeleted: false\r\n            }).then((docRef) => {\r\n                console.log(\"Document written with ID: \", docRef.id);\r\n                history.push('/build/' + docRef.id + '/edit');\r\n\r\n                //redirect to build edit page here\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Error adding document: \", error);\r\n            }); */\r\n        }\r\n\r\n        function saveBuild() {\r\n            console.log('updating build, current state:');\r\n            console.log(state);\r\n\r\n            if (state.userId !== auth.currentUser.uid) {\r\n                alert('You can\\'t edit a build you didn\\'t create.');\r\n                return;\r\n            }\r\n\r\n            let buildDataRef = db.collection('builds').doc(state.buildId);\r\n\r\n            buildDataRef.set({\r\n                careerId: state.careerId,\r\n                primaryWeapon: {\r\n                    id: state.primaryWeaponId,\r\n                    property1Id: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.PRIMARY_TRAIT_INDEX]\r\n                },\r\n                secondaryWeapon: {\r\n                    id: state.secondaryWeaponId,\r\n                    property1Id: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.SECONDARY_TRAIT_INDEX]\r\n                },\r\n                necklace: {\r\n                    property1Id: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.NECKLACE_TRAIT_INDEX]\r\n                },\r\n                charm: {\r\n                    property1Id: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.CHARM_TRAIT_INDEX]\r\n                },\r\n                trinket: {\r\n                    property1Id: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                    property2Id: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                    traitId: state.traits[Constants.TRINKET_TRAIT_INDEX]\r\n                },\r\n/*                     primaryWeaponId: state.primaryWeaponId,\r\n                primaryWeaponProperty1: state.properties[Constants.PRIMARY_PROPERTY1_INDEX],\r\n                primaryWeaponProperty2:state.properties[Constants.PRIMARY_PROPERTY2_INDEX],\r\n                primaryWeaponTrait: state.traits[Constants.PRIMARY_TRAIT_INDEX],\r\n                secondaryWeaponId: state.secondaryWeaponId,\r\n                secondaryWeaponProperty1: state.properties[Constants.SECONDARY_PROPERTY1_INDEX],\r\n                secondaryWeaponProperty2: state.properties[Constants.SECONDARY_PROPERTY2_INDEX],\r\n                secondaryWeaponTrait: state.traits[Constants.SECONDARY_TRAIT_INDEX],\r\n                necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\r\n                charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\r\n                trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX], */\r\n                talent1: state.talents[Constants.TALENT_TIER_1],\r\n                talent2: state.talents[Constants.TALENT_TIER_2],\r\n                talent3: state.talents[Constants.TALENT_TIER_3],\r\n                talent4: state.talents[Constants.TALENT_TIER_4],\r\n                talent5: state.talents[Constants.TALENT_TIER_5],\r\n                talent6: state.talents[Constants.TALENT_TIER_6],\r\n                name: state.name,\r\n                description: state.description,\r\n                difficulties: state.difficulties.map((item) => { return item.id }),\r\n                missions: state.missions.map((item) => { return item.id }),\r\n                potions: state.potions.map((item) => { return item.id }),\r\n                roles: state.roles.map((item) => { return item.id }),\r\n                books: state.books.map((item) => { return item.id }),\r\n                dateModified: new Date(),\r\n                //userId: auth.currentUser.uid,\r\n                //username: auth.currentUser.displayName,\r\n                //TODO - ensure that username is updated for each build when user edits their username\r\n                videos: state.videos,\r\n                isDeleted: false\r\n            }, {merge: true}).then(() => {\r\n                console.log(\"Document updated with ID: \", state.buildId);\r\n                \r\n                updateState({\r\n                    type: \"UPDATE_DIRTY\", \r\n                    payload: false\r\n                });\r\n\r\n                var buildSaveIndicator = document.getElementById('buildSaveIndicator');\r\n                buildSaveIndicator.classList.add('saved');\r\n                setTimeout(() => { buildSaveIndicator.classList.remove('saved'); }, 4000);\r\n\r\n            }).catch((error) => {\r\n                console.error(\"Error updating document: \", error);\r\n            });\r\n        }\r\n\r\n        //get build id param\r\n        //if empty, load nothing from DB\r\n        //if not empty, load build from DB and updatestate\r\n\r\n        //saving builds with /create/ url saves new db item and redirects to /buildId/edit page\r\n        //saving builds with /edit/ url just updates the record in the db\r\n\r\n        if (!state.isFromDb && !state.createBuild) {\r\n            return (\r\n                <div className=\"edit-build-page\" data-readonly={state.readonly} data-dirty={state.dirty}>\r\n                    <p>No build found</p>\r\n                </div>);\r\n        }\r\n\r\n        if (!auth.currentUser) {\r\n            return (\r\n                <div className=\"edit-build-page\" data-readonly={state.readonly} data-dirty={state.dirty}>\r\n                    <p>You must be logged in to edit builds</p>\r\n                </div>);\r\n        }\r\n\r\n        if (!state.createBuild && state.userId !== auth.currentUser.uid) {\r\n            return (\r\n                <div className=\"edit-build-page\" data-readonly={state.readonly} data-dirty={state.dirty}>\r\n                    <p>Cannot edit build that you didn't create</p>\r\n                </div>);\r\n        }\r\n\r\n        return (\r\n            <div className=\"edit-build-page build-page\" data-liked={state.isLiked} data-readonly={state.readonly} data-dirty={state.dirty} data-fresh={state.createBuild}>\r\n                <span id=\"buildSaveIndicator\" className=\"border-03 background-18\">Build saved...</span>\r\n                <div className=\"build-left-container\">\r\n                    <div className=\"build-buttons-container\">\r\n                        <span id=\"saveBuildButton\" className=\"button-01 border-04\" onClick={saveBuildClick.bind(this)}>Save Build</span>\r\n                    </div>                    \r\n                    <HeroSelect careerId={state.careerId}></HeroSelect>\r\n                </div>\r\n                <div className=\"build-main-container\">\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>Summary</Tab>\r\n                            <Tab>Videos</Tab>\r\n                            <Tab>Combos</Tab>                        \r\n                        </TabList>\r\n                        <TabPanel className=\"build-summary-tab\">\r\n                            <div className=\"build-details-container\">\r\n                                <HeroDetails careerId={state.careerId}></HeroDetails>\r\n                                <input type=\"text\" className=\"build-name-input border-02 background-18\" placeholder=\"Name your build\" value={state.name} onChange={handleNameChange.bind(this)}></input>\r\n                                <textarea className=\"input-build-description border-02 background-18\" wrap=\"hard\" placeholder=\"Describe your build\" value={state.description} onChange={handleDescriptionChanged.bind(this)}></textarea>\r\n                                <BuildInformation></BuildInformation>\r\n                                <BuildOptions></BuildOptions>\r\n                            </div>\r\n                            <BuildSummary></BuildSummary>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className=\"build-additional-info\">\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className=\"hero-abilities\">\r\n                            </div>                        \r\n                        </TabPanel>\r\n                    </Tabs>\r\n                    <div className=\"build-talents-container\">\r\n                        <HeroTalents contextActionType=\"UPDATE_TALENTS\" careerId={state.careerId} talents={state.talents}></HeroTalents>\r\n                    </div>\r\n                </div>\r\n                <div className=\"build-right-container\">\r\n                    <Inventory></Inventory>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default EditBuildPage;"]},"metadata":{},"sourceType":"module"}