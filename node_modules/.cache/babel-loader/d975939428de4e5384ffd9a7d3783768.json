{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\heroSelect\\\\HeroSelect.js\";\nimport React, { Component } from 'react';\nimport './HeroSelect.css';\nimport { AppContext } from '../../stores/Store';\nimport { heroesData } from '../../data/Heroes';\n\nclass HeroSelect extends Component {\n  constructor(props) {\n    super(props);\n    this.renderHeroes = this.renderHeroes.bind(this);\n    this.updateHeroSelect = this.updateHeroSelect.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-select-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-select-header border-01\",\n      title: \"Show/Hide Hero Selection\",\n      onClick: this.toggleHeroSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-select-header-background\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 13\n      }\n    }, \"Hero Selection\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"hero-icon-container background-12 border-01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }\n    }, this.renderHeroes(this.props.heroSelectHandler)));\n  }\n\n  toggleHeroSelect() {\n    var heroSelectContainer = document.querySelector('.hero-icon-container');\n\n    if (!heroSelectContainer.style.display || heroSelectContainer.style.display === 'grid') {\n      heroSelectContainer.style.display = 'none';\n    } else {\n      heroSelectContainer.style.display = 'grid';\n    }\n  }\n\n  renderHeroes() {\n    var selectedCareerId = this.props.careerId;\n    var selectedCareers = this.props.selectedValues;\n    let heroIconList = [];\n\n    for (var i = 0; i < heroesData.length; i++) {\n      let careerId = heroesData[i].id;\n      let heroClassName = \"border-02 hero-icon-0\" + careerId;\n      let keyValue = \"hero-icon-0\" + careerId;\n\n      if (careerId > 9) {\n        heroClassName = \"border-02 hero-icon-\" + careerId;\n        keyValue = \"hero-icon-\" + careerId;\n      }\n\n      if (parseInt(selectedCareerId) === parseInt(careerId)) {\n        heroClassName += \" selected\";\n      }\n\n      if (selectedCareers.includes(parseInt(careerId))) {\n        heroClassName += \" selected\";\n      }\n\n      if (this.props.onSelect) {\n        heroIconList.push( /*#__PURE__*/React.createElement(\"div\", {\n          \"data-career\": careerId,\n          onClick: this.props.onSelect,\n          key: keyValue,\n          className: heroClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 27\n          }\n        }));\n      } else {\n        heroIconList.push( /*#__PURE__*/React.createElement(\"div\", {\n          \"data-career\": careerId,\n          onClick: this.updateHeroSelect,\n          key: keyValue,\n          className: heroClassName,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 27\n          }\n        }));\n      }\n    }\n\n    return heroIconList;\n  }\n\n  updateHeroSelect(e) {\n    const [state, updateState] = this.context;\n    updateState({\n      type: \"UPDATE_CAREER\",\n      payload: parseInt(e.target.dataset.career)\n    });\n  }\n\n}\n\nHeroSelect.contextType = AppContext;\nexport default HeroSelect;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/heroSelect/HeroSelect.js"],"names":["React","Component","AppContext","heroesData","HeroSelect","constructor","props","renderHeroes","bind","updateHeroSelect","render","toggleHeroSelect","heroSelectHandler","heroSelectContainer","document","querySelector","style","display","selectedCareerId","careerId","selectedCareers","selectedValues","heroIconList","i","length","id","heroClassName","keyValue","parseInt","includes","onSelect","push","e","state","updateState","context","type","payload","target","dataset","career","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './HeroSelect.css';\r\nimport { AppContext } from '../../stores/Store';\r\nimport {heroesData} from '../../data/Heroes'\r\n\r\nclass HeroSelect extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.renderHeroes = this.renderHeroes.bind(this);\r\n    this.updateHeroSelect = this.updateHeroSelect.bind(this);\r\n  }\r\n\r\n  static contextType = AppContext;\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"hero-select-container\">\r\n        <div className=\"hero-select-header border-01\" title=\"Show/Hide Hero Selection\" onClick={this.toggleHeroSelect}>\r\n          <div className=\"hero-select-header-background\">\r\n            <p>Hero Selection</p>\r\n          </div>\r\n        </div>\r\n        <div className=\"hero-icon-container background-12 border-01\">\r\n        {this.renderHeroes(this.props.heroSelectHandler)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleHeroSelect() {\r\n    var heroSelectContainer = document.querySelector('.hero-icon-container');\r\n    if (!heroSelectContainer.style.display || heroSelectContainer.style.display === 'grid') {\r\n      heroSelectContainer.style.display = 'none';\r\n    }\r\n    else {\r\n      heroSelectContainer.style.display = 'grid';\r\n    }\r\n  }\r\n\r\n  renderHeroes() {\r\n    var selectedCareerId = this.props.careerId;\r\n    var selectedCareers = this.props.selectedValues;\r\n\r\n    let heroIconList = [];\r\n\r\n    for (var i = 0; i < heroesData.length; i++) {\r\n      let careerId = heroesData[i].id;\r\n      let heroClassName = \"border-02 hero-icon-0\" + careerId;\r\n      let keyValue = \"hero-icon-0\" + careerId;\r\n      if (careerId>9){\r\n          heroClassName = \"border-02 hero-icon-\" + careerId;\r\n          keyValue = \"hero-icon-\" + careerId;\r\n      }\r\n      \r\n      if (parseInt(selectedCareerId) === parseInt(careerId)) {\r\n          heroClassName += \" selected\";\r\n      }\r\n\r\n      if (selectedCareers.includes(parseInt(careerId))) {\r\n        heroClassName += \" selected\";\r\n      }\r\n\r\n      if (this.props.onSelect) {\r\n        heroIconList.push(<div data-career={careerId} onClick={this.props.onSelect}\r\n          key={keyValue} className={heroClassName}></div>);\r\n      }\r\n      else {      \r\n        heroIconList.push(<div data-career={careerId} onClick={this.updateHeroSelect}\r\n                             key={keyValue} className={heroClassName}></div>);\r\n      }\r\n    }\r\n    return heroIconList;\r\n  }\r\n\r\n  updateHeroSelect(e) {\r\n    const [state, updateState] = this.context;\r\n    updateState({type: \"UPDATE_CAREER\", payload: parseInt(e.target.dataset.career)})\r\n  }\r\n}\r\n\r\nexport default HeroSelect;\r\n"]},"metadata":{},"sourceType":"module"}