{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\ranalds.gift\\\\src\\\\stores\\\\UserStore.js\";\nimport React from 'react';\nimport { AppContext } from './Store';\nimport { withRouter } from 'react-router';\nconst UserContext = React.createContext();\nexport { UserContext };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return { ...state,\n        username: action.payload.username,\n        email: action.payload.email\n      };\n\n    case 'UPDATE_USER_INFO':\n      alert('updating userpagestore state...');\n      alert('updating user id ' + action.payload.userId);\n      return { ...state,\n        userId: action.payload.userId,\n        username: action.payload.username,\n        email: action.payload.email,\n        steamId: action.payload.steamId,\n        twitch: action.payload.twitch\n      };\n\n    default:\n      throw new Error('Error updating User Page state.');\n  }\n}\n\nexport default function UserStore(props) {\n  const stateHook = React.useReducer(reducer, {\n    userId: '',\n    username: '',\n    email: '',\n    steam: '',\n    twitch: '',\n    reddit: ''\n  });\n  return /*#__PURE__*/React.createElement(UserContext.Provider, {\n    value: stateHook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/stores/UserStore.js"],"names":["React","AppContext","withRouter","UserContext","createContext","reducer","state","action","type","username","payload","email","alert","userId","steamId","twitch","Error","UserStore","props","stateHook","useReducer","steam","reddit","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,MAAMC,WAAW,GAAGH,KAAK,CAACI,aAAN,EAApB;AAEA,SAAQD,WAAR;;AAEA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAAP,CAAeD,QAApC;AAA8CE,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAApE,OAAP;;AACJ,SAAK,kBAAL;AACIC,MAAAA,KAAK,CAAC,iCAAD,CAAL;AACAA,MAAAA,KAAK,CAAC,sBAAsBL,MAAM,CAACG,OAAP,CAAeG,MAAtC,CAAL;AACA,aAAO,EAAC,GAAGP,KAAJ;AAAWO,QAAAA,MAAM,EAAEN,MAAM,CAACG,OAAP,CAAeG,MAAlC;AAA0CJ,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAAP,CAAeD,QAAnE;AAA6EE,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC,KAAnG;AAA0GG,QAAAA,OAAO,EAAEP,MAAM,CAACG,OAAP,CAAeI,OAAlI;AAA2IC,QAAAA,MAAM,EAAER,MAAM,CAACG,OAAP,CAAeK;AAAlK,OAAP;;AACJ;AACI,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AARR;AAUH;;AAED,eAAe,SAASC,SAAT,CAAmBC,KAAnB,EAA0B;AAErC,QAAMC,SAAS,GAAGnB,KAAK,CAACoB,UAAN,CAAiBf,OAAjB,EAA0B;AACxCQ,IAAAA,MAAM,EAAE,EADgC;AAExCJ,IAAAA,QAAQ,EAAE,EAF8B;AAGxCE,IAAAA,KAAK,EAAE,EAHiC;AAIxCU,IAAAA,KAAK,EAAE,EAJiC;AAKxCN,IAAAA,MAAM,EAAE,EALgC;AAMxCO,IAAAA,MAAM,EAAE;AANgC,GAA1B,CAAlB;AASA,sBACI,oBAAC,WAAD,CAAa,QAAb;AAAsB,IAAA,KAAK,EAAEH,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACK,QADX,CADJ;AAKH","sourcesContent":["import React from 'react'\r\nimport { AppContext } from './Store';\r\nimport {withRouter} from 'react-router';\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport {UserContext}\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, username: action.payload.username, email: action.payload.email};\r\n        case 'UPDATE_USER_INFO':\r\n            alert('updating userpagestore state...');\r\n            alert('updating user id ' + action.payload.userId);\r\n            return {...state, userId: action.payload.userId, username: action.payload.username, email: action.payload.email, steamId: action.payload.steamId, twitch: action.payload.twitch};\r\n        default:\r\n            throw new Error('Error updating User Page state.');\r\n    }\r\n}\r\n\r\nexport default function UserStore(props) {\r\n\r\n    const stateHook = React.useReducer(reducer, {\r\n        userId: '',\r\n        username: '',\r\n        email: '',\r\n        steam: '',\r\n        twitch: '',\r\n        reddit: ''\r\n    });\r\n\r\n    return (\r\n        <UserContext.Provider value={stateHook}>\r\n            {props.children}\r\n        </UserContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}