{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\buildList\\\\BuildsList.js\";\nimport React, { Component, useEffect, useRef } from 'react';\nimport './BuildList.css';\nimport './BuildListItem.css';\nimport BuildListItem from './BuildListItem';\nimport 'simplebar/dist/simplebar.min.css';\nimport BuildsListStore from '../../stores/PagedBuildListStore';\nimport { db } from '../../utils/Firebase';\nimport { AppContext } from '../../stores/Store';\nimport { DataHelper } from '../../utils/DataHelper';\nimport MissionSelect from '../select/MissionSelect';\nimport DifficultySelect from '../select/DifficultySelect';\nimport RoleSelect from '../select/RoleSelect';\nimport PotionSelect from '../select/PotionSelect';\nimport HeroSelect from '../heroSelect/HeroSelect'; // accept a userid, if no id provided get all builds with page limits\n// if an id is passed, get the builds for this user only\n\nclass BuildsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      builds: [],\n      buildsCount: 0,\n      firstBuildDoc: {},\n      lastBuildDoc: {},\n      currentPage: 1,\n      isLastPage: true,\n      userId: 0,\n      username: '',\n      careers: [],\n      difficulties: [],\n      missions: [],\n      potions: [],\n      roles: [],\n      isDataLoaded: false,\n      isLoadingData: false,\n      filters: [],\n      pageItemLimit: 10,\n      hideFilters: false,\n      hidePages: false\n    };\n  } //current page index and total pages from props\n  //specify the type of build list... or make specific types of build lists...\n  //filters based on properties: userid, careerid, patch\n  //static contextType = AppContext;\n  //accept props: \n  //filters\n  //current page number\n  //last build document\n\n\n  render() {\n    //get filters from props\n    //alert('rendering builds list');\n    console.log(this.state);\n\n    if (!this.state.isDataLoaded) {\n      this.loadBuildList();\n    }\n\n    if (this.state.isLoadingData) {\n      console.log('builds list data is still loading');\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }\n      }, \"Builds\"));\n    }\n\n    console.log(this.state.currentPage);\n    console.log(this.state.isLastPage);\n\n    if (this.state.hideFilters && this.state.hidePages) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 15\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds));\n    }\n\n    if (this.state.hidePages) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filtered-build-list build-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HeroSelect, {\n        selectedValues: this.state.careers,\n        onSelect: this.updateHeroSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }\n      }), this.renderFilters(this.state.filters), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds)));\n    }\n\n    if (this.state.hideFilters) {\n      if (this.state.currentPage === 1 && this.state.isLastPage) {\n        // less items than page size, don't display page controls\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"build-list-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          \"data-page-number\": 1,\n          \"data-last-page\": this.state.isLastPage,\n          className: \"build-list border-01 background-17\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          class: \"build-list-header header-underline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 17\n          }\n        }, \"Builds\"), this.renderBuilds(this.state.builds)));\n      }\n\n      if (this.state.isLastPage) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"paged-build-list build-list-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"page-controls\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"build-list-page-button tab-button\",\n          onClick: this.clickPreviousPage.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 17\n          }\n        }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"build-list-page-button tab-button disabled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 17\n          }\n        }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n          \"data-page-number\": 1,\n          \"data-last-page\": this.state.isLastPage,\n          className: \"build-list border-01 background-17\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          class: \"build-list-header header-underline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 17\n          }\n        }, \"Builds\"), this.renderBuilds(this.state.builds)));\n      }\n\n      if (this.state.currentPage === 1) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"paged-build-list build-list-container\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 11\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"page-controls\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"button\", {\n          className: \"build-list-page-button tab-button disabled\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 15\n          }\n        }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n          className: \"build-list-page-button tab-button\",\n          onClick: this.clickNextPage.bind(this),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 15\n          }\n        }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n          \"data-page-number\": 1,\n          \"data-last-page\": false,\n          className: \"build-list border-01 background-17\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          class: \"build-list-header header-underline\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 15\n          }\n        }, \"Builds\"), this.renderBuilds(this.state.builds)));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"paged-build-list build-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button\",\n        onClick: this.clickPreviousPage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }\n      }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button\",\n        onClick: this.clickNextPage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }\n      }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds)));\n    } //Show both filters and page controls\n\n\n    if (this.state.currentPage === 1 && this.state.isLastPage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"filtered-build-list build-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HeroSelect, {\n        selectedValues: this.state.careers,\n        onSelect: this.updateHeroSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }\n      }), this.renderFilters(this.state.filters), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 15\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds)));\n    }\n\n    if (this.state.isLastPage) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"paged-build-list filtered-build-list build-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HeroSelect, {\n        selectedValues: this.state.careers,\n        onSelect: this.updateHeroSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }\n      }), this.renderFilters(this.state.filters), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button\",\n        onClick: this.clickPreviousPage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }\n      }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 15\n        }\n      }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 15\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds)));\n    }\n\n    if (this.state.currentPage === 1) {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"paged-build-list filtered-build-list build-list-container\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(HeroSelect, {\n        selectedValues: this.state.careers,\n        onSelect: this.updateHeroSelect.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 13\n        }\n      }), this.renderFilters(this.state.filters), /*#__PURE__*/React.createElement(\"div\", {\n        className: \"page-controls\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 200,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button disabled\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }\n      }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n        className: \"build-list-page-button tab-button\",\n        onClick: this.clickNextPage.bind(this),\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }\n      }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n        \"data-page-number\": 1,\n        \"data-last-page\": false,\n        className: \"build-list border-01 background-17\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"span\", {\n        class: \"build-list-header header-underline\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }\n      }, \"Builds\"), this.renderBuilds(this.state.builds)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"paged-build-list filtered-build-list build-list-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(HeroSelect, {\n      selectedValues: this.state.careers,\n      onSelect: this.updateHeroSelect.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }\n    }), this.renderFilters(this.state.filters), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"page-controls\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 216,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      className: \"build-list-page-button tab-button\",\n      onClick: this.clickPreviousPage.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 13\n      }\n    }, \"Previous\"), /*#__PURE__*/React.createElement(\"button\", {\n      className: \"build-list-page-button tab-button\",\n      onClick: this.clickNextPage.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 13\n      }\n    }, \"Next\")), /*#__PURE__*/React.createElement(\"div\", {\n      \"data-page-number\": 1,\n      \"data-last-page\": false,\n      className: \"build-list border-01 background-17\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      class: \"build-list-header header-underline\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 13\n      }\n    }, \"Builds\"), this.renderBuilds(this.state.builds)));\n  }\n\n  loadBuildList() {\n    this.state.isLoadingData = true;\n    let buildsQuery = this.getOrderedBuildsQuery();\n    buildsQuery.limit(this.state.pageItemLimit + 1).get().then(querySnapshot => {\n      let buildList = [];\n      let isLastPage = false;\n\n      if (querySnapshot.docs.length < this.state.pageItemLimit + 1) {\n        isLastPage = true;\n      } else {\n        buildList.pop(); // remove 11th item from the list, it's only to check for last page\n      }\n\n      querySnapshot.forEach(build => {\n        buildList.push({\n          id: build.id,\n          data: build.data()\n        });\n      });\n      this.setState({\n        builds: buildList,\n        firstBuildDoc: querySnapshot.docs[0],\n        lastBuildDoc: isLastPage ? querySnapshot.docs[querySnapshot.docs.length - 1] : querySnapshot.docs[querySnapshot.docs.length - 2],\n        currentPage: 1,\n        isLastPage: isLastPage,\n        buildsCount: querySnapshot.docs.length,\n        isDataLoaded: true,\n        isLoadingData: false\n      });\n    });\n  }\n\n  getOrderedBuildsQuery() {\n    return this.getBuildsQuery().orderBy('dateModified', 'desc');\n  }\n\n  getPageCount() {\n    return Math.round(this.state.buildsCount / this.state.pageItemLimit) + 1;\n  }\n\n  clickNextPage() {\n    if (this.state.isLastPage) {\n      return;\n    }\n\n    let buildsQuery = this.getOrderedBuildsQuery();\n    buildsQuery.startAfter(this.state.lastBuildDoc).limit(this.state.pageItemLimit + 1).get().then(querySnapshot => {\n      var builds = [];\n      querySnapshot.forEach(build => {\n        builds.push({\n          id: build.id,\n          data: build.data()\n        });\n      });\n      let isLastPage = false;\n      console.log(querySnapshot.docs.length < this.state.pageItemLimit + 1);\n\n      if (querySnapshot.docs.length < this.state.pageItemLimit + 1) {\n        isLastPage = true;\n      } else {\n        builds.pop(); // remove 11th item from the list, it's only to check for last page\n      }\n\n      var newPage = this.state.currentPage + 1;\n      this.setState({\n        builds: builds,\n        firstBuildDoc: querySnapshot.docs[0],\n        lastBuildDoc: isLastPage ? querySnapshot.docs[querySnapshot.docs.length - 1] : querySnapshot.docs[querySnapshot.docs.length - 2],\n        currentPage: newPage,\n        isLastPage: isLastPage,\n        buildsCount: querySnapshot.docs.length,\n        isDataLoaded: true,\n        isLoadingData: false\n      });\n    });\n  }\n\n  clickPreviousPage() {\n    if (this.state.currentPage <= 0) {\n      return;\n    }\n\n    let buildsQuery = this.getOrderedBuildsQuery();\n    buildsQuery.endBefore(this.state.firstBuildDoc).limitToLast(this.state.pageItemLimit).get().then(querySnapshot => {\n      var builds = [];\n      querySnapshot.forEach(build => {\n        builds.push({\n          id: build.id,\n          data: build.data()\n        });\n      });\n      var newPage = this.state.currentPage - 1;\n      this.setState({\n        builds: builds,\n        firstBuildDoc: querySnapshot.docs[0],\n        lastBuildDoc: querySnapshot.docs[querySnapshot.docs.length - 1],\n        currentPage: newPage,\n        isLastPage: false,\n        buildsCount: querySnapshot.docs.length,\n        isDataLoaded: true,\n        isLoadingData: false\n      });\n    });\n  }\n\n  getBuildsQuery() {\n    let buildsQuery = db.collection(\"builds\");\n    let filters = [];\n\n    if (this.state.careers.length > 0) {\n      filters.push({\n        field: 'careerId',\n        comparison: 'in',\n        value: this.state.careers\n      });\n    }\n\n    if (this.props.filters) {\n      filters = this.props.filters;\n    }\n\n    filters.forEach(filter => {\n      buildsQuery = buildsQuery.where(filter.field, filter.comparison, filter.value);\n    });\n    return buildsQuery;\n  }\n\n  updateHeroSelect(e) {\n    var careerId = parseInt(e.target.dataset.career);\n\n    if (e.target.classList.contains('selected')) {\n      var careers = this.state.careers;\n      const index = careers.indexOf(careerId);\n\n      if (index > -1) {\n        careers.splice(index, 1);\n      }\n\n      this.setState({\n        careers: careers,\n        isDataLoaded: false\n      });\n    } else {\n      var careers = this.state.careers;\n      careers.push(careerId);\n      this.setState({\n        careers: careers,\n        isDataLoaded: false\n      });\n    }\n  }\n\n  renderFilters(filters) {\n    /*    let filtersHtml = [];\r\n    \n       //handlers get passed to change the state\r\n       //state changed refreshes page\r\n       filtersHtml.push(<div class=\"filters-container\">\r\n         <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n         <div className=\"select-filters-container\"></div>\r\n         <DifficultySelect></DifficultySelect>\r\n         <MissionSelect></MissionSelect>\r\n         <PotionSelect></PotionSelect>\r\n         <RoleSelect></RoleSelect>\r\n         </div>\r\n       ); */\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"select-filters-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 388,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DifficultySelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 389,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(MissionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(PotionSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(RoleSelect, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 11\n      }\n    }));\n  }\n\n  renderBuilds(builds) {\n    console.log('list of builds to render');\n    console.log(builds);\n\n    if (!builds || builds.length === 0) {\n      return /*#__PURE__*/React.createElement(\"p\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 14\n        }\n      }, \"No builds in database.\");\n    }\n\n    var buildsHtml = [];\n    builds.forEach(build => {\n      buildsHtml.push( /*#__PURE__*/React.createElement(BuildListItem, {\n        key: build.id,\n        buildId: build.id,\n        buildData: build.data,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 23\n        }\n      }));\n    });\n    return buildsHtml;\n  }\n\n}\n\nexport default BuildsList;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/buildList/BuildsList.js"],"names":["React","Component","useEffect","useRef","BuildListItem","BuildsListStore","db","AppContext","DataHelper","MissionSelect","DifficultySelect","RoleSelect","PotionSelect","HeroSelect","BuildsList","constructor","props","state","builds","buildsCount","firstBuildDoc","lastBuildDoc","currentPage","isLastPage","userId","username","careers","difficulties","missions","potions","roles","isDataLoaded","isLoadingData","filters","pageItemLimit","hideFilters","hidePages","render","console","log","loadBuildList","renderBuilds","updateHeroSelect","bind","renderFilters","clickPreviousPage","clickNextPage","buildsQuery","getOrderedBuildsQuery","limit","get","then","querySnapshot","buildList","docs","length","pop","forEach","build","push","id","data","setState","getBuildsQuery","orderBy","getPageCount","Math","round","startAfter","newPage","endBefore","limitToLast","collection","field","comparison","value","filter","where","e","careerId","parseInt","target","dataset","career","classList","contains","index","indexOf","splice","buildsHtml"],"mappings":"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","sourcesContent":["import React, {Component, useEffect, useRef} from 'react';\r\nimport './BuildList.css';\r\nimport './BuildListItem.css';\r\nimport BuildListItem from './BuildListItem';\r\nimport 'simplebar/dist/simplebar.min.css';\r\nimport BuildsListStore from '../../stores/PagedBuildListStore';\r\nimport { db } from '../../utils/Firebase';\r\nimport { AppContext } from '../../stores/Store';\r\nimport { DataHelper } from '../../utils/DataHelper';\r\nimport MissionSelect from '../select/MissionSelect';\r\nimport DifficultySelect from '../select/DifficultySelect';\r\nimport RoleSelect from '../select/RoleSelect';\r\nimport PotionSelect from '../select/PotionSelect';\r\nimport HeroSelect from '../heroSelect/HeroSelect';\r\n\r\n// accept a userid, if no id provided get all builds with page limits\r\n// if an id is passed, get the builds for this user only\r\n\r\nclass BuildsList extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n\r\n    this.state = {\r\n      builds: [],\r\n      buildsCount: 0,\r\n      firstBuildDoc: {},\r\n      lastBuildDoc: {},\r\n      currentPage: 1,\r\n      isLastPage: true,\r\n      userId: 0,\r\n      username: '',\r\n      careers: [],\r\n      difficulties: [],\r\n      missions: [],\r\n      potions: [],\r\n      roles: [],\r\n      isDataLoaded: false,\r\n      isLoadingData: false,\r\n      filters: [],\r\n      pageItemLimit: 10,\r\n      hideFilters: false,\r\n      hidePages: false\r\n    };\r\n  }\r\n\r\n  //current page index and total pages from props\r\n\r\n  //specify the type of build list... or make specific types of build lists...\r\n  //filters based on properties: userid, careerid, patch\r\n\r\n  //static contextType = AppContext;\r\n\r\n\r\n  //accept props: \r\n  //filters\r\n  //current page number\r\n  //last build document\r\n\r\n  render() {\r\n    //get filters from props\r\n    //alert('rendering builds list');\r\n    console.log(this.state);\r\n\r\n    if (!this.state.isDataLoaded) {\r\n\r\n      this.loadBuildList();\r\n    }\r\n\r\n    if (this.state.isLoadingData) {\r\n      console.log('builds list data is still loading');\r\n      \r\n      return (\r\n        <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n          <span class=\"build-list-header header-underline\">Builds</span>\r\n          {/* <button className=\"build-list-page-button tab-button\" onClick={this.props.handleNextPage}>Next</button> */}\r\n        </div>\r\n        );\r\n    }\r\n\r\n    console.log(this.state.currentPage);\r\n    console.log(this.state.isLastPage);\r\n\r\n    if (this.state.hideFilters && this.state.hidePages) {\r\n      return (\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n      );      \r\n    }\r\n\r\n    if (this.state.hidePages) {\r\n      return (\r\n          <div className=\"filtered-build-list build-list-container\">\r\n          <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n            {this.renderFilters(this.state.filters)}\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n          </div>\r\n      );   \r\n    }\r\n\r\n    if (this.state.hideFilters) {\r\n      if (this.state.currentPage === 1 && this.state.isLastPage) { // less items than page size, don't display page controls\r\n        return (\r\n            <div className=\"build-list-container\">\r\n              <div data-page-number={1} data-last-page={this.state.isLastPage} className=\"build-list border-01 background-17\">\r\n                <span class=\"build-list-header header-underline\">Builds</span>\r\n                {this.renderBuilds(this.state.builds)}\r\n              </div>\r\n            </div>\r\n        );      \r\n      }\r\n  \r\n      if (this.state.isLastPage) {\r\n        return (\r\n            <div className=\"paged-build-list build-list-container\">\r\n              <div className=\"page-controls\">\r\n                <button className=\"build-list-page-button tab-button\" onClick={this.clickPreviousPage.bind(this)}>Previous</button>\r\n                <button className=\"build-list-page-button tab-button disabled\">Next</button>\r\n              </div>\r\n              <div data-page-number={1} data-last-page={this.state.isLastPage} className=\"build-list border-01 background-17\">\r\n                <span class=\"build-list-header header-underline\">Builds</span>\r\n                {this.renderBuilds(this.state.builds)}\r\n              </div>\r\n            </div>\r\n        );      \r\n      }\r\n  \r\n      if (this.state.currentPage === 1) {\r\n        return (\r\n          <div className=\"paged-build-list build-list-container\">\r\n            <div className=\"page-controls\">\r\n              <button className=\"build-list-page-button tab-button disabled\">Previous</button>\r\n              <button className=\"build-list-page-button tab-button\" onClick={this.clickNextPage.bind(this)}>Next</button>\r\n            </div>\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n          </div>\r\n        );      \r\n      } \r\n\r\n      return (\r\n        <div className=\"paged-build-list build-list-container\">\r\n          <div className=\"page-controls\">\r\n            <button className=\"build-list-page-button tab-button\" onClick={this.clickPreviousPage.bind(this)}>Previous</button>\r\n            <button className=\"build-list-page-button tab-button\" onClick={this.clickNextPage.bind(this)}>Next</button>\r\n          </div>\r\n          <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n            <span class=\"build-list-header header-underline\">Builds</span>\r\n            {this.renderBuilds(this.state.builds)}\r\n          </div>\r\n        </div>\r\n      );    \r\n    }\r\n\r\n\r\n    //Show both filters and page controls\r\n\r\n    if (this.state.currentPage === 1 && this.state.isLastPage) {\r\n      return (\r\n          <div className=\"filtered-build-list build-list-container\">\r\n          <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n            {this.renderFilters(this.state.filters)}\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n          </div>\r\n      );      \r\n    }\r\n\r\n    if (this.state.isLastPage) {\r\n      return (\r\n          <div className=\"paged-build-list filtered-build-list build-list-container\">\r\n          <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n            {this.renderFilters(this.state.filters)}\r\n            <div className=\"page-controls\">\r\n              <button className=\"build-list-page-button tab-button\" onClick={this.clickPreviousPage.bind(this)}>Previous</button>\r\n              <button className=\"build-list-page-button tab-button disabled\">Next</button>\r\n            </div>\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n          </div>\r\n      );      \r\n    }\r\n\r\n    if (this.state.currentPage === 1) {\r\n      return (\r\n          <div className=\"paged-build-list filtered-build-list build-list-container\">\r\n            <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n            {this.renderFilters(this.state.filters)}\r\n            <div className=\"page-controls\">\r\n              <button className=\"build-list-page-button tab-button disabled\">Previous</button>\r\n              <button className=\"build-list-page-button tab-button\" onClick={this.clickNextPage.bind(this)}>Next</button>\r\n            </div>\r\n            <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n              <span class=\"build-list-header header-underline\">Builds</span>\r\n              {this.renderBuilds(this.state.builds)}\r\n            </div>\r\n          </div>\r\n      );      \r\n    }\r\n\r\n    return (\r\n        <div className=\"paged-build-list filtered-build-list build-list-container\">\r\n        <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n          {this.renderFilters(this.state.filters)}\r\n          <div className=\"page-controls\">\r\n            <button className=\"build-list-page-button tab-button\" onClick={this.clickPreviousPage.bind(this)}>Previous</button>\r\n            <button className=\"build-list-page-button tab-button\" onClick={this.clickNextPage.bind(this)}>Next</button>\r\n          </div>\r\n          <div data-page-number={1} data-last-page={false} className=\"build-list border-01 background-17\">\r\n            <span class=\"build-list-header header-underline\">Builds</span>\r\n            {this.renderBuilds(this.state.builds)}\r\n          </div>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  loadBuildList() {\r\n    this.state.isLoadingData = true;\r\n  \r\n\r\n    let buildsQuery = this.getOrderedBuildsQuery();\r\n\r\n    buildsQuery.limit(this.state.pageItemLimit + 1).get().then((querySnapshot) => {\r\n      let buildList = [];\r\n      let isLastPage = false;\r\n\r\n      if (querySnapshot.docs.length < (this.state.pageItemLimit + 1)) {\r\n        isLastPage = true;\r\n      }\r\n      else {        \r\n        buildList.pop(); // remove 11th item from the list, it's only to check for last page\r\n      }\r\n\r\n      querySnapshot.forEach((build) => {\r\n        buildList.push({ id: build.id, data: build.data()});\r\n      });\r\n      \r\n      this.setState({builds: buildList, \r\n                    firstBuildDoc: querySnapshot.docs[0],\r\n                    lastBuildDoc: isLastPage ? querySnapshot.docs[querySnapshot.docs.length-1] : querySnapshot.docs[querySnapshot.docs.length-2], \r\n                    currentPage: 1,\r\n                    isLastPage: isLastPage,\r\n                    buildsCount: querySnapshot.docs.length,\r\n                    isDataLoaded: true, \r\n                    isLoadingData: false\r\n                  });\r\n    });\r\n  }\r\n\r\n  getOrderedBuildsQuery() {\r\n    return this.getBuildsQuery().orderBy('dateModified', 'desc');\r\n  }\r\n\r\n  getPageCount() {\r\n    return Math.round(this.state.buildsCount / this.state.pageItemLimit) + 1;\r\n  }\r\n\r\n  clickNextPage() {\r\n    if (this.state.isLastPage) {\r\n      return;\r\n    }\r\n\r\n    let buildsQuery = this.getOrderedBuildsQuery();\r\n\r\n    buildsQuery.startAfter(this.state.lastBuildDoc).limit(this.state.pageItemLimit + 1).get().then((querySnapshot) => {\r\n      var builds = [];\r\n      querySnapshot.forEach((build) => {\r\n        builds.push({ id: build.id, data: build.data()});\r\n      });\r\n\r\n      let isLastPage = false;\r\n\r\n      console.log(querySnapshot.docs.length < (this.state.pageItemLimit + 1));\r\n\r\n      if (querySnapshot.docs.length < (this.state.pageItemLimit + 1)) {\r\n        isLastPage = true;\r\n      }\r\n      else {        \r\n        builds.pop(); // remove 11th item from the list, it's only to check for last page\r\n      }\r\n\r\n      var newPage = this.state.currentPage + 1;\r\n\r\n      this.setState({builds: builds, \r\n                    firstBuildDoc: querySnapshot.docs[0],\r\n                    lastBuildDoc: isLastPage ? querySnapshot.docs[querySnapshot.docs.length-1] : querySnapshot.docs[querySnapshot.docs.length-2], \r\n                    currentPage: newPage,\r\n                    isLastPage: isLastPage,\r\n                    buildsCount: querySnapshot.docs.length,\r\n                    isDataLoaded: true, \r\n                    isLoadingData: false\r\n                  });\r\n    });\r\n  }\r\n\r\n  clickPreviousPage() {\r\n    if (this.state.currentPage <= 0) {\r\n      return;\r\n    }\r\n\r\n    let buildsQuery = this.getOrderedBuildsQuery();\r\n\r\n    buildsQuery.endBefore(this.state.firstBuildDoc).limitToLast(this.state.pageItemLimit).get().then((querySnapshot) => {\r\n      var builds = [];\r\n      querySnapshot.forEach((build) => {\r\n        builds.push({ id: build.id, data: build.data()});\r\n      });\r\n\r\n      var newPage = this.state.currentPage - 1;      \r\n\r\n      this.setState({builds: builds, \r\n        firstBuildDoc: querySnapshot.docs[0],\r\n        lastBuildDoc: querySnapshot.docs[querySnapshot.docs.length-1], \r\n        currentPage: newPage,\r\n        isLastPage: false,\r\n        buildsCount: querySnapshot.docs.length,\r\n        isDataLoaded: true, \r\n        isLoadingData: false\r\n      });\r\n    });\r\n  }\r\n\r\n  getBuildsQuery() {\r\n  \r\n    let buildsQuery = db.collection(\"builds\");\r\n\r\n    let filters = [];\r\n\r\n    if (this.state.careers.length > 0) {\r\n      filters.push({ field: 'careerId', comparison: 'in', value: this.state.careers })\r\n    }\r\n\r\n    if (this.props.filters) {\r\n      filters = this.props.filters;\r\n    }\r\n\r\n    filters.forEach((filter) => {\r\n      buildsQuery = buildsQuery.where(filter.field, filter.comparison, filter.value);\r\n    });\r\n\r\n    return buildsQuery;\r\n  }\r\n\r\n  updateHeroSelect(e) {\r\n    var careerId = parseInt(e.target.dataset.career);\r\n    if (e.target.classList.contains('selected')) {\r\n      var careers = this.state.careers;\r\n      const index = careers.indexOf(careerId);\r\n      if (index > -1) {\r\n        careers.splice(index, 1);\r\n      }\r\n      this.setState({ careers: careers, isDataLoaded: false })\r\n    } else {\r\n      var careers = this.state.careers;\r\n      careers.push(careerId);\r\n      this.setState({ careers: careers, isDataLoaded: false })\r\n    }\r\n  }\r\n\r\n  renderFilters(filters) {\r\n /*    let filtersHtml = [];\r\n\r\n    //handlers get passed to change the state\r\n    //state changed refreshes page\r\n    filtersHtml.push(<div class=\"filters-container\">\r\n      <HeroSelect selectedValues={this.state.careers} onSelect={this.updateHeroSelect.bind(this)}></HeroSelect>\r\n      <div className=\"select-filters-container\"></div>\r\n      <DifficultySelect></DifficultySelect>\r\n      <MissionSelect></MissionSelect>\r\n      <PotionSelect></PotionSelect>\r\n      <RoleSelect></RoleSelect>\r\n      </div>\r\n    ); */\r\n\r\n\r\n    return (\r\n        <div className=\"select-filters-container\">\r\n          <DifficultySelect></DifficultySelect>\r\n          <MissionSelect></MissionSelect>\r\n          <PotionSelect></PotionSelect>\r\n          <RoleSelect></RoleSelect>\r\n        </div>\r\n    );\r\n  }\r\n\r\n  renderBuilds(builds) {\r\n    console.log('list of builds to render');\r\n    console.log(builds);\r\n    if (!builds || builds.length === 0) {\r\n      return <p>No builds in database.</p>;\r\n    }\r\n    var buildsHtml = [];\r\n    builds.forEach((build) => {\r\n      buildsHtml.push(<BuildListItem key={build.id} buildId={build.id} buildData={build.data}></BuildListItem>)\r\n    });\r\n    return buildsHtml;\r\n  }\r\n}\r\n\r\nexport default BuildsList;"]},"metadata":{},"sourceType":"module"}