{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\ranalds.gift\\\\src\\\\components\\\\buildPage\\\\EditBuildPage.js\";\nimport React, { Component, useContext } from 'react';\nimport HeroTalents from '../heroTalents/HeroTalents';\nimport BuildList from '../buildList/BuildList';\nimport Inventory from '../inventory/Inventory';\nimport './EditBuildPage.css';\nimport HeroDetails from '../heroDetails/HeroDetails';\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\nimport \"react-tabs/style/react-tabs.css\";\nimport BuildOptions from './BuildOptions';\nimport BuildSummary from './BuildSummary';\nimport { AppContext } from '../../stores/Store';\nimport HeroSelect from '../heroSelect/HeroSelect';\nimport { BuildPageContext } from '../../stores/BuildPageStore';\nimport { useParams, useRouteMatch } from 'react-router';\nimport { auth, db } from '../../utils/Firebase';\nimport * as Constants from '../../data/Constants';\nimport history from '../../utils/History';\nimport { PatchList } from '../../data/PatchList';\nimport { UserContext } from '../../stores/UserStore';\n\nfunction EditBuildPage() {\n  const [state, updateState] = useContext(AppContext);\n  const [userState, updateUserState] = useContext(UserContext);\n  const {\n    path\n  } = useRouteMatch();\n  let params = useParams();\n  console.log(!userState.userId);\n  /*         if (!userState.userId || userState.userId == '') {\r\n              console.log('props.userId');\r\n              return <div className=\"error-message\">Error loading build for edit</div>;\r\n          }  */\n\n  console.log('params build id: ' + params.buildId); //console.log(PatchList[0]);\n\n  var root = document.getElementById('root');\n  root.dataset.pageName = 'editBuildPage';\n\n  if (params.buildId && state.buildId != params.buildId) {\n    loadBuild(params.buildId);\n  }\n\n  function loadBuild(buildId) {\n    console.log('loading build id ' + buildId);\n\n    if (state.buildId != buildId) {\n      state.buildId = buildId;\n    }\n\n    db.collection('builds').doc(buildId).get().then(build => {\n      if (!build.data()) {\n        console.log('No build found with ID ' + buildId);\n        return;\n      }\n\n      console.log('build loaded from db:');\n      console.log(build.data());\n      updateState({\n        type: 'INIT_STATE_FROM_DATA',\n        payload: build\n      });\n    }).catch(error => {\n      console.error('Error retrieving data from DB:', error);\n    });\n  }\n\n  function handleDescriptionChanged(e) {\n    updateState({\n      type: \"UPDATE_DESCRIPTION\",\n      payload: e.currentTarget.value\n    });\n  }\n\n  function saveBuild() {\n    if (!auth.currentUser) {\n      alert('Can\\'t save or create builds when not authenticated.');\n      return;\n    }\n\n    console.log('saving build to database build id ' + state.buildId + ' for user id ' + auth.currentUser.uid);\n\n    if (state.buildId == 0) {\n      //creating new build then forward to build edit page\n      alert('creating new build');\n      db.collection('builds').add({\n        careerId: state.careerId,\n        meleeId: state.meleeId,\n        meleeProperty1: state.properties[Constants.MELEE_PROPERTY1_INDEX],\n        meleeProperty2: state.properties[Constants.MELEE_PROPERTY2_INDEX],\n        meleeTrait: state.traits[Constants.MELEE_TRAIT_INDEX],\n        rangeId: state.rangeId,\n        rangeProperty1: state.properties[Constants.RANGE_PROPERTY1_INDEX],\n        rangeProperty2: state.properties[Constants.RANGE_PROPERTY2_INDEX],\n        rangeTrait: state.traits[Constants.RANGE_TRAIT_INDEX],\n        necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\n        necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\n        necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\n        charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\n        charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\n        charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\n        trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\n        trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\n        trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX],\n        talent1: state.talents[Constants.TALENT_TIER_1],\n        talent2: state.talents[Constants.TALENT_TIER_2],\n        talent3: state.talents[Constants.TALENT_TIER_3],\n        talent4: state.talents[Constants.TALENT_TIER_4],\n        talent5: state.talents[Constants.TALENT_TIER_5],\n        talent6: state.talents[Constants.TALENT_TIER_6],\n        name: state.name,\n        description: state.description,\n        difficulty: state.difficulty,\n        mission: state.mission,\n        potion: state.potion,\n        roles: state.roles,\n        likes: 0,\n        dateCreated: new Date(),\n        dateModified: new Date(),\n        userId: auth.currentUser.uid,\n        username: auth.currentUser.displayName,\n        videos: state.videos\n      }).then(docRef => {\n        console.log(\"Document written with ID: \", docRef.id);\n        history.push('/build/' + docRef.id + '/edit'); //redirect to build edit page here\n      }).catch(error => {\n        console.error(\"Error adding document: \", error);\n      });\n    } else {\n      console.log('updating build, current state:');\n      console.log(state);\n\n      if (state.userId != auth.currentUser.uid) {\n        alert('You can\\'t edit a build you didn\\'t create.');\n        return;\n      }\n\n      let buildDataRef = db.collection('builds').doc(state.buildId);\n      buildDataRef.update({\n        careerId: state.careerId,\n        meleeId: state.meleeId,\n        meleeProperty1: state.properties[Constants.MELEE_PROPERTY1_INDEX],\n        meleeProperty2: state.properties[Constants.MELEE_PROPERTY2_INDEX],\n        meleeTrait: state.traits[Constants.MELEE_TRAIT_INDEX],\n        rangeId: state.rangeId,\n        rangeProperty1: state.properties[Constants.RANGE_PROPERTY1_INDEX],\n        rangeProperty2: state.properties[Constants.RANGE_PROPERTY2_INDEX],\n        rangeTrait: state.traits[Constants.RANGE_TRAIT_INDEX],\n        necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\n        necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\n        necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\n        charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\n        charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\n        charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\n        trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\n        trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\n        trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX],\n        talent1: state.talents[Constants.TALENT_TIER_1],\n        talent2: state.talents[Constants.TALENT_TIER_2],\n        talent3: state.talents[Constants.TALENT_TIER_3],\n        talent4: state.talents[Constants.TALENT_TIER_4],\n        talent5: state.talents[Constants.TALENT_TIER_5],\n        talent6: state.talents[Constants.TALENT_TIER_6],\n        name: state.name,\n        description: state.description,\n        difficulty: state.difficulty,\n        mission: state.mission,\n        potion: state.potion,\n        roles: state.roles,\n        likes: state.likes,\n        dateModified: new Date(),\n        userId: auth.currentUser.uid,\n        username: auth.currentUser.displayName,\n        videos: state.videos\n      }).then(() => {\n        console.log(\"Document updated with ID: \", state.buildId);\n      }).catch(error => {\n        console.error(\"Error updating document: \", error);\n      });\n      /* \r\n                      buildDataRef.get().then((buildData) => {\r\n                          alert('updating build');\r\n                          console.log(buildData.id);\r\n                          console.log(buildData.data());\r\n                          return;\r\n      \r\n                          buildData.update({\r\n          \r\n                          }).then((docRef) => {\r\n                              console.log(\"Document updated with ID: \", docRef.id);\r\n                          }).catch((error) => {\r\n                              console.error(\"Error updating document: \", error);\r\n                          });\r\n                      }).catch((error) => {\r\n                          console.error('Error getting document:', error);\r\n                      }); */\n    } //updateState({type: 'SAVE_BUILD', payload: '0'});\n\n  } //get build id param\n  //if empty, load nothing from DB\n  //if not empty, load build from DB and updatestate\n  //saving builds with /create/ url saves new db item and redirects to /buildId/edit page\n  //saving builds with /edit/ url just updates the record in the db\n\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"edit-build-page\",\n    \"data-dirty\": state.dirty,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-left-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-group-buttons-container\",\n    onClick: saveBuild.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 25\n    }\n  }, \"Save Build\")), /*#__PURE__*/React.createElement(HeroSelect, {\n    careerId: state.careerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-main-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Tabs, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(TabList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 229,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 230,\n      columnNumber: 29\n    }\n  }, \"Summary\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 29\n    }\n  }, \"Videos\"), /*#__PURE__*/React.createElement(Tab, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 29\n    }\n  }, \"Combos\")), /*#__PURE__*/React.createElement(TabPanel, {\n    className: \"build-summary-tab\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-details-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(HeroDetails, {\n    careerId: state.careerId,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"input-build-description\",\n    wrap: \"hard\",\n    placeholder: \"Describe your build\",\n    value: state.description,\n    onChange: handleDescriptionChanged.bind(this),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(BuildOptions, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 33\n    }\n  })), /*#__PURE__*/React.createElement(BuildSummary, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 242,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-additional-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 29\n    }\n  })), /*#__PURE__*/React.createElement(TabPanel, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 246,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"hero-abilities\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 29\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-talents-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(HeroTalents, {\n    contextActionType: \"UPDATE_TALENTS\",\n    careerId: state.careerId,\n    talents: state.talents,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 25\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"build-right-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 255,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Inventory, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 256,\n      columnNumber: 21\n    }\n  })));\n}\n\nexport default EditBuildPage;","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/components/buildPage/EditBuildPage.js"],"names":["React","Component","useContext","HeroTalents","BuildList","Inventory","HeroDetails","Tab","Tabs","TabList","TabPanel","BuildOptions","BuildSummary","AppContext","HeroSelect","BuildPageContext","useParams","useRouteMatch","auth","db","Constants","history","PatchList","UserContext","EditBuildPage","state","updateState","userState","updateUserState","path","params","console","log","userId","buildId","root","document","getElementById","dataset","pageName","loadBuild","collection","doc","get","then","build","data","type","payload","catch","error","handleDescriptionChanged","e","currentTarget","value","saveBuild","currentUser","alert","uid","add","careerId","meleeId","meleeProperty1","properties","MELEE_PROPERTY1_INDEX","meleeProperty2","MELEE_PROPERTY2_INDEX","meleeTrait","traits","MELEE_TRAIT_INDEX","rangeId","rangeProperty1","RANGE_PROPERTY1_INDEX","rangeProperty2","RANGE_PROPERTY2_INDEX","rangeTrait","RANGE_TRAIT_INDEX","necklaceProperty1","NECKLACE_PROPERTY1_INDEX","necklaceProperty2","NECKLACE_PROPERTY2_INDEX","necklaceTrait","NECKLACE_TRAIT_INDEX","charmProperty1","CHARM_PROPERTY1_INDEX","charmProperty2","CHARM_PROPERTY2_INDEX","charmTrait","CHARM_TRAIT_INDEX","trinketProperty1","TRINKET_PROPERTY1_INDEX","trinketProperty2","TRINKET_PROPERTY2_INDEX","trinketTrait","TRINKET_TRAIT_INDEX","talent1","talents","TALENT_TIER_1","talent2","TALENT_TIER_2","talent3","TALENT_TIER_3","talent4","TALENT_TIER_4","talent5","TALENT_TIER_5","talent6","TALENT_TIER_6","name","description","difficulty","mission","potion","roles","likes","dateCreated","Date","dateModified","username","displayName","videos","docRef","id","push","buildDataRef","update","dirty","bind"],"mappings":"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","sourcesContent":["import React, {Component, useContext} from 'react';\r\nimport HeroTalents from '../heroTalents/HeroTalents'\r\nimport BuildList from '../buildList/BuildList'\r\nimport Inventory from '../inventory/Inventory'\r\nimport './EditBuildPage.css';\r\nimport HeroDetails from '../heroDetails/HeroDetails';\r\nimport { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport \"react-tabs/style/react-tabs.css\";\r\nimport BuildOptions from './BuildOptions';\r\nimport BuildSummary from './BuildSummary';\r\nimport { AppContext } from '../../stores/Store';\r\nimport HeroSelect from '../heroSelect/HeroSelect';\r\nimport { BuildPageContext } from '../../stores/BuildPageStore';\r\nimport { useParams, useRouteMatch } from 'react-router';\r\nimport { auth, db } from '../../utils/Firebase';\r\nimport * as Constants from '../../data/Constants';\r\nimport history from '../../utils/History';\r\nimport { PatchList } from '../../data/PatchList';\r\nimport { UserContext } from '../../stores/UserStore';\r\n\r\nfunction EditBuildPage() {\r\n\r\n        const [state, updateState] = useContext(AppContext);\r\n        const [userState, updateUserState] = useContext(UserContext);\r\n\r\n        const { path } = useRouteMatch();\r\n        let params = useParams();\r\n\r\n        console.log(!userState.userId);\r\n\r\n/*         if (!userState.userId || userState.userId == '') {\r\n            console.log('props.userId');\r\n            return <div className=\"error-message\">Error loading build for edit</div>;\r\n        }  */\r\n    \r\n        console.log('params build id: ' + params.buildId);\r\n        //console.log(PatchList[0]);\r\n\r\n        var root = document.getElementById('root');\r\n        root.dataset.pageName = 'editBuildPage';\r\n\r\n        if (params.buildId && state.buildId != params.buildId) {\r\n            loadBuild(params.buildId);\r\n        }\r\n\r\n        function loadBuild(buildId) {\r\n            console.log('loading build id ' + buildId);\r\n            if (state.buildId != buildId) {\r\n                state.buildId = buildId;\r\n            }\r\n\r\n            db.collection('builds').doc(buildId).get().then((build) => {\r\n                if (!build.data()) {\r\n                    console.log('No build found with ID ' + buildId);\r\n                    return;\r\n                }\r\n\r\n                console.log('build loaded from db:');\r\n                console.log(build.data());\r\n\r\n                updateState({\r\n                    type: 'INIT_STATE_FROM_DATA', \r\n                    payload: build\r\n                });\r\n            }).catch((error) => {\r\n                console.error('Error retrieving data from DB:', error);\r\n            });\r\n\r\n        }\r\n\r\n        function handleDescriptionChanged(e) {\r\n            updateState({\r\n                type: \"UPDATE_DESCRIPTION\", \r\n                payload: e.currentTarget.value\r\n            });\r\n        }\r\n\r\n        function saveBuild() {\r\n            if (!auth.currentUser) {\r\n                alert('Can\\'t save or create builds when not authenticated.');\r\n                return;\r\n            }\r\n\r\n            console.log('saving build to database build id ' + state.buildId + ' for user id ' + auth.currentUser.uid);\r\n\r\n            if (state.buildId == 0) {\r\n                //creating new build then forward to build edit page\r\n\r\n                alert('creating new build');\r\n\r\n                db.collection('builds').add({\r\n                    careerId: state.careerId,\r\n                    meleeId: state.meleeId,\r\n                    meleeProperty1: state.properties[Constants.MELEE_PROPERTY1_INDEX],\r\n                    meleeProperty2:state.properties[Constants.MELEE_PROPERTY2_INDEX],\r\n                    meleeTrait: state.traits[Constants.MELEE_TRAIT_INDEX],\r\n                    rangeId: state.rangeId,\r\n                    rangeProperty1: state.properties[Constants.RANGE_PROPERTY1_INDEX],\r\n                    rangeProperty2: state.properties[Constants.RANGE_PROPERTY2_INDEX],\r\n                    rangeTrait: state.traits[Constants.RANGE_TRAIT_INDEX],\r\n                    necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                    necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                    necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\r\n                    charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                    charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                    charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\r\n                    trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                    trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                    trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX],\r\n                    talent1: state.talents[Constants.TALENT_TIER_1],\r\n                    talent2: state.talents[Constants.TALENT_TIER_2],\r\n                    talent3: state.talents[Constants.TALENT_TIER_3],\r\n                    talent4: state.talents[Constants.TALENT_TIER_4],\r\n                    talent5: state.talents[Constants.TALENT_TIER_5],\r\n                    talent6: state.talents[Constants.TALENT_TIER_6],\r\n                    name: state.name,\r\n                    description: state.description,\r\n                    difficulty: state.difficulty,\r\n                    mission: state.mission,\r\n                    potion: state.potion,\r\n                    roles: state.roles,\r\n                    likes: 0,\r\n                    dateCreated: new Date(),\r\n                    dateModified: new Date(),\r\n                    userId: auth.currentUser.uid,\r\n                    username: auth.currentUser.displayName,\r\n                    videos: state.videos\r\n                }).then((docRef) => {\r\n                    console.log(\"Document written with ID: \", docRef.id);\r\n                    history.push('/build/' + docRef.id + '/edit');\r\n\r\n                    //redirect to build edit page here\r\n\r\n                }).catch((error) => {\r\n                    console.error(\"Error adding document: \", error);\r\n                });\r\n            }\r\n            else {\r\n\r\n                console.log('updating build, current state:');\r\n                console.log(state);\r\n\r\n                if (state.userId != auth.currentUser.uid) {\r\n                    alert('You can\\'t edit a build you didn\\'t create.');\r\n                    return;\r\n                }\r\n\r\n                let buildDataRef = db.collection('builds').doc(state.buildId);\r\n\r\n                buildDataRef.update({\r\n                    careerId: state.careerId,\r\n                    meleeId: state.meleeId,\r\n                    meleeProperty1: state.properties[Constants.MELEE_PROPERTY1_INDEX],\r\n                    meleeProperty2:state.properties[Constants.MELEE_PROPERTY2_INDEX],\r\n                    meleeTrait: state.traits[Constants.MELEE_TRAIT_INDEX],\r\n                    rangeId: state.rangeId,\r\n                    rangeProperty1: state.properties[Constants.RANGE_PROPERTY1_INDEX],\r\n                    rangeProperty2: state.properties[Constants.RANGE_PROPERTY2_INDEX],\r\n                    rangeTrait: state.traits[Constants.RANGE_TRAIT_INDEX],\r\n                    necklaceProperty1: state.properties[Constants.NECKLACE_PROPERTY1_INDEX],\r\n                    necklaceProperty2: state.properties[Constants.NECKLACE_PROPERTY2_INDEX],\r\n                    necklaceTrait: state.traits[Constants.NECKLACE_TRAIT_INDEX],\r\n                    charmProperty1: state.properties[Constants.CHARM_PROPERTY1_INDEX],\r\n                    charmProperty2: state.properties[Constants.CHARM_PROPERTY2_INDEX],\r\n                    charmTrait: state.traits[Constants.CHARM_TRAIT_INDEX],\r\n                    trinketProperty1: state.properties[Constants.TRINKET_PROPERTY1_INDEX],\r\n                    trinketProperty2: state.properties[Constants.TRINKET_PROPERTY2_INDEX],\r\n                    trinketTrait: state.traits[Constants.TRINKET_TRAIT_INDEX],\r\n                    talent1: state.talents[Constants.TALENT_TIER_1],\r\n                    talent2: state.talents[Constants.TALENT_TIER_2],\r\n                    talent3: state.talents[Constants.TALENT_TIER_3],\r\n                    talent4: state.talents[Constants.TALENT_TIER_4],\r\n                    talent5: state.talents[Constants.TALENT_TIER_5],\r\n                    talent6: state.talents[Constants.TALENT_TIER_6],\r\n                    name: state.name,\r\n                    description: state.description,\r\n                    difficulty: state.difficulty,\r\n                    mission: state.mission,\r\n                    potion: state.potion,\r\n                    roles: state.roles,\r\n                    likes: state.likes,\r\n                    dateModified: new Date(),\r\n                    userId: auth.currentUser.uid,\r\n                    username: auth.currentUser.displayName,\r\n                    videos: state.videos    \r\n                }).then(() => {\r\n                    console.log(\"Document updated with ID: \", state.buildId);\r\n                }).catch((error) => {\r\n                    console.error(\"Error updating document: \", error);\r\n                });\r\n/* \r\n                buildDataRef.get().then((buildData) => {\r\n                    alert('updating build');\r\n                    console.log(buildData.id);\r\n                    console.log(buildData.data());\r\n                    return;\r\n\r\n                    buildData.update({\r\n    \r\n                    }).then((docRef) => {\r\n                        console.log(\"Document updated with ID: \", docRef.id);\r\n                    }).catch((error) => {\r\n                        console.error(\"Error updating document: \", error);\r\n                    });\r\n                }).catch((error) => {\r\n                    console.error('Error getting document:', error);\r\n                }); */\r\n            }\r\n            //updateState({type: 'SAVE_BUILD', payload: '0'});\r\n        }\r\n\r\n        //get build id param\r\n        //if empty, load nothing from DB\r\n        //if not empty, load build from DB and updatestate\r\n\r\n        //saving builds with /create/ url saves new db item and redirects to /buildId/edit page\r\n        //saving builds with /edit/ url just updates the record in the db\r\n\r\n        return (\r\n            <div className=\"edit-build-page\" data-dirty={state.dirty}>\r\n                <div className=\"build-left-container\">\r\n                    <div className=\"build-group-buttons-container\" onClick={saveBuild.bind(this)}>\r\n                        <p>Save Build</p>\r\n                    </div>                    \r\n                    <HeroSelect careerId={state.careerId}></HeroSelect>\r\n                </div>\r\n                <div className=\"build-main-container\">\r\n                    <Tabs>\r\n                        <TabList>\r\n                            <Tab>Summary</Tab>\r\n                            <Tab>Videos</Tab>\r\n                            <Tab>Combos</Tab>                        \r\n                        </TabList>\r\n                        <TabPanel className=\"build-summary-tab\">\r\n                            <div className=\"build-details-container\">\r\n                                <HeroDetails careerId={state.careerId}></HeroDetails>\r\n                                <textarea className=\"input-build-description\" wrap=\"hard\" placeholder=\"Describe your build\" value={state.description} onChange={handleDescriptionChanged.bind(this)}></textarea>\r\n                                <BuildOptions></BuildOptions>\r\n                            </div>\r\n                            <BuildSummary></BuildSummary>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className=\"build-additional-info\">\r\n                            </div>\r\n                        </TabPanel>\r\n                        <TabPanel>\r\n                            <div className=\"hero-abilities\">\r\n                            </div>                        \r\n                        </TabPanel>\r\n                    </Tabs>\r\n                    <div className=\"build-talents-container\">\r\n                        <HeroTalents contextActionType=\"UPDATE_TALENTS\" careerId={state.careerId} talents={state.talents}></HeroTalents>\r\n                    </div>\r\n                </div>\r\n                <div className=\"build-right-container\">\r\n                    <Inventory></Inventory>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n\r\nexport default EditBuildPage;"]},"metadata":{},"sourceType":"module"}