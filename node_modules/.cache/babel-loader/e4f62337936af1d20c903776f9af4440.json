{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\stores\\\\UserViewStore.js\";\nimport React from 'react';\nconst UserViewContext = React.createContext();\nexport { UserViewContext };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'UPDATE_USER_INFO':\n      console.log('updating user page state ' + action.payload.userId);\n      return { ...state,\n        userId: action.payload.userId,\n        username: action.payload.username,\n        email: action.payload.email,\n        steam: action.payload.steam,\n        twitch: action.payload.twitch,\n        dateCreated: action.payload.dateCreated,\n        dateModified: action.payload.dateModified\n      };\n\n    case 'UPDATE_USER_BUILDS':\n      console.log('update user builds list ');\n      console.log(action.payload);\n      return { ...state,\n        userBuilds: action.payload.builds,\n        userBuildsLastDoc: action.payload.lastDoc,\n        userBuildsPageCount: action.payload.totalPages,\n        userBuildsCurrentPage: action.payload.currentPage\n      };\n\n    case 'UPDATE_LIKED_BUILDS':\n      return { ...state,\n        likedBuilds: action.payload.builds,\n        likedBuildsLastDoc: action.payload.lastDoc,\n        likedBuildsPageCount: action.payload.totalPages,\n        likedBuildsCurrentPage: action.payload.currentPage\n      };\n    //return {...state, likedBuilds: action.payload};\n\n    default:\n      throw new Error('Error updating User Page state.');\n  }\n}\n\nexport default function UserViewStore(props) {\n  const stateHook = React.useReducer(reducer, {\n    userId: '',\n    username: '',\n    email: '',\n    steam: '',\n    twitch: '',\n    dateCreated: '',\n    dateModified: '',\n    userBuilds: [],\n    userBuildsLastDoc: {},\n    userBuildsPageCount: 0,\n    userBuildsCurrentPage: 1,\n    likedBuilds: [],\n    likedBuildsLastDoc: {},\n    likedBuildsPageCount: 0,\n    likedBuildsCurrentPage: 1,\n    userFilters: [{\n      field: 'userId',\n      comparison: '==',\n      value: 'il853JiLs8VoxVPRU97p0kxp8Ks2'\n    }]\n  });\n  return /*#__PURE__*/React.createElement(UserViewContext.Provider, {\n    value: stateHook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/dev/New folder/rg/src/stores/UserViewStore.js"],"names":["React","UserViewContext","createContext","reducer","state","action","type","console","log","payload","userId","username","email","steam","twitch","dateCreated","dateModified","userBuilds","builds","userBuildsLastDoc","lastDoc","userBuildsPageCount","totalPages","userBuildsCurrentPage","currentPage","likedBuilds","likedBuildsLastDoc","likedBuildsPageCount","likedBuildsCurrentPage","Error","UserViewStore","props","stateHook","useReducer","userFilters","field","comparison","value","children"],"mappings":"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","sourcesContent":["import React from 'react'\r\n\r\nconst UserViewContext = React.createContext();\r\n\r\nexport {UserViewContext}\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case 'UPDATE_USER_INFO':\r\n            console.log('updating user page state ' + action.payload.userId);\r\n            return {...state, \r\n                userId: action.payload.userId, \r\n                username: action.payload.username, \r\n                email: action.payload.email, \r\n                steam: action.payload.steam, \r\n                twitch: action.payload.twitch, \r\n                dateCreated: action.payload.dateCreated, \r\n                dateModified: action.payload.dateModified \r\n            };\r\n        case 'UPDATE_USER_BUILDS':\r\n            console.log('update user builds list ');\r\n            console.log(action.payload);\r\n            return {...state, userBuilds: action.payload.builds, userBuildsLastDoc: action.payload.lastDoc, userBuildsPageCount: action.payload.totalPages, userBuildsCurrentPage: action.payload.currentPage};\r\n        case 'UPDATE_LIKED_BUILDS':\r\n            \r\n            return {...state, likedBuilds: action.payload.builds, likedBuildsLastDoc: action.payload.lastDoc, likedBuildsPageCount: action.payload.totalPages, likedBuildsCurrentPage: action.payload.currentPage};\r\n            //return {...state, likedBuilds: action.payload};\r\n        default:\r\n            throw new Error('Error updating User Page state.');\r\n    }\r\n}\r\n\r\nexport default function UserViewStore(props) {\r\n\r\n    const stateHook = React.useReducer(reducer, {\r\n        userId: '',\r\n        username: '',\r\n        email: '',\r\n        steam: '',\r\n        twitch: '',\r\n        dateCreated: '',\r\n        dateModified: '',\r\n        userBuilds: [],\r\n        userBuildsLastDoc: {},\r\n        userBuildsPageCount: 0,\r\n        userBuildsCurrentPage: 1,\r\n        likedBuilds: [],\r\n        likedBuildsLastDoc: {},\r\n        likedBuildsPageCount: 0,\r\n        likedBuildsCurrentPage: 1,\r\n        userFilters: [{field: 'userId', comparison: '==', value: 'il853JiLs8VoxVPRU97p0kxp8Ks2'}]\r\n    });\r\n\r\n    return (\r\n        <UserViewContext.Provider value={stateHook}>\r\n            {props.children}\r\n        </UserViewContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}