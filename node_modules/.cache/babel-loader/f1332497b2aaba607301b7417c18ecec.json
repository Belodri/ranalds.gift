{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\inventory\\\\ItemSelect.js\";\nimport React, { Component } from 'react';\nimport './ItemSelect.css';\nimport { AppContext } from '../../stores/Store';\nimport { heroesData } from '../../data/Heroes';\nimport { meleeWeaponsData } from '../../data/MeleeWeapons';\nimport { rangeWeaponsData } from '../../data/RangeWeapons';\nimport { weaponsData } from '../../data/Weapons';\nimport WeaponIcon from './WeaponIcon';\n\nclass ItemSelect extends Component {\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.type + \"-container inventory-item-container border-01\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      className: this.props.type + \"-header inventory-item-container-header\",\n      style: {\n        textTransform: 'uppercase'\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 13\n      }\n    }, this.props.type), /*#__PURE__*/React.createElement(\"div\", {\n      className: this.props.type + \"-divider divider-06\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }\n    }), this.renderItems());\n  }\n\n  renderItems() {\n    const [state] = this.context;\n    return this.renderItemContainer(this.props.type, this.props.selectedItemId, this.props.careerId);\n    /*     if (this.props.type === 'melee') {\r\n            return this.renderItemContainer(meleeWeaponsData, this.props.type, state.meleeId, 1);\r\n        } else {\r\n          if (parseInt(state.careerId) === 6 || parseInt(state.careerId) === 16) {\r\n            return this.renderItemContainer(meleeWeaponsData, \"melee\", state.rangeId, 2);\r\n          }\r\n            return this.renderItemContainer(rangeWeaponsData, this.props.type, state.rangeId, 2);\r\n        } */\n  }\n\n  renderItemContainer(itemType, selectedItemId, careerId) {\n    const [state, updateState] = this.context;\n    var weaponsContainerHtml = [];\n    var hero = heroesData.find(hero => {\n      return parseInt(hero.id) === parseInt(careerId);\n    });\n    hero = hero ? hero : heroesData[0];\n    var weaponsForHero = [];\n\n    if (itemType === \"primary\") {\n      weaponsForHero = weaponsData.filter(item => {\n        return item.canWieldPrimary.includes(careerId);\n      });\n    } else if (itemType === \"secondary\") {\n      weaponsForHero = weaponsData.filter(item => {\n        return item.canWieldSecondary.includes(careerId);\n      });\n    }\n\n    var selectedWeapon = weaponsForHero.find(item => {\n      return parseInt(item.id) === parseInt(selectedItemId);\n    });\n\n    if (!selectedWeapon) {\n      selectedWeapon = weaponsForHero[0];\n      updateState({\n        type: \"UPDATE_ITEM_SELECT\",\n        payload: {\n          id: parseInt(selectedWeapon.id),\n          type: itemType\n        }\n      });\n    }\n\n    for (var i = 0; i < weaponsForHero.length; i++) {\n      var weapon = weaponsForHero[i];\n      weaponsContainerHtml.push(this.renderItem(weapon, itemType, parseInt(weapon.id) === parseInt(selectedItemId)));\n    }\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"weapon-container\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }\n    }, weaponsContainerHtml);\n  }\n\n  renderItem(item, itemType, selected) {\n    return /*#__PURE__*/React.createElement(WeaponIcon, {\n      key: item.id,\n      id: item.id,\n      slot: itemType,\n      selected: selected,\n      handleClick: this.itemSelectChanged.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 12\n      }\n    });\n  }\n\n  itemSelectChanged(e) {\n    const [state, updateState] = this.context;\n    updateState({\n      type: \"UPDATE_ITEM_SELECT\",\n      payload: {\n        id: parseInt(e.currentTarget.dataset.id),\n        type: e.currentTarget.dataset.slot\n      }\n    });\n  }\n\n  handleItemClick(e) {\n    e.currentTarget.classList.add('selected');\n  }\n\n}\n\nItemSelect.contextType = AppContext;\nexport default ItemSelect;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/inventory/ItemSelect.js"],"names":["React","Component","AppContext","heroesData","meleeWeaponsData","rangeWeaponsData","weaponsData","WeaponIcon","ItemSelect","render","props","type","textTransform","renderItems","state","context","renderItemContainer","selectedItemId","careerId","itemType","updateState","weaponsContainerHtml","hero","find","parseInt","id","weaponsForHero","filter","item","canWieldPrimary","includes","canWieldSecondary","selectedWeapon","payload","i","length","weapon","push","renderItem","selected","itemSelectChanged","bind","e","currentTarget","dataset","slot","handleItemClick","classList","add","contextType"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\r\nimport './ItemSelect.css';\r\nimport { AppContext } from '../../stores/Store';\r\nimport {heroesData} from '../../data/Heroes'\r\nimport {meleeWeaponsData} from '../../data/MeleeWeapons'\r\nimport {rangeWeaponsData} from '../../data/RangeWeapons'\r\nimport {weaponsData} from '../../data/Weapons'\r\nimport WeaponIcon from './WeaponIcon';\r\n\r\nclass ItemSelect extends Component {\r\n  static contextType = AppContext;\r\n\r\n  render() {\r\n    return (\r\n        <div className={this.props.type + \"-container inventory-item-container border-01\"}>\r\n            <p className={this.props.type + \"-header inventory-item-container-header\"} style={{textTransform: 'uppercase'}}>{this.props.type}</p>\r\n            <div className={this.props.type + \"-divider divider-06\"}></div>\r\n            {this.renderItems()}\r\n        </div>\r\n    );\r\n  }\r\n\r\n  renderItems() {\r\n    const [state] = this.context;\r\n\r\n    return this.renderItemContainer(this.props.type, this.props.selectedItemId, this.props.careerId);\r\n\r\n/*     if (this.props.type === 'melee') {\r\n        return this.renderItemContainer(meleeWeaponsData, this.props.type, state.meleeId, 1);\r\n    } else {\r\n      if (parseInt(state.careerId) === 6 || parseInt(state.careerId) === 16) {\r\n        return this.renderItemContainer(meleeWeaponsData, \"melee\", state.rangeId, 2);\r\n      }\r\n        return this.renderItemContainer(rangeWeaponsData, this.props.type, state.rangeId, 2);\r\n    } */\r\n  }\r\n\r\n  renderItemContainer(itemType, selectedItemId, careerId) {\r\n    const [state, updateState] = this.context;\r\n    var weaponsContainerHtml = [];\r\n\r\n    var hero = heroesData.find((hero) => { return parseInt(hero.id) === parseInt(careerId); });\r\n    hero = hero ? hero : heroesData[0];\r\n\r\n    var weaponsForHero = [];\r\n\r\n    if (itemType === \"primary\") {\r\n      weaponsForHero = weaponsData.filter((item) => { return item.canWieldPrimary.includes(careerId); });\r\n    } \r\n    else if (itemType === \"secondary\") {\r\n      weaponsForHero = weaponsData.filter((item) => { return item.canWieldSecondary.includes(careerId); });\r\n    }\r\n\r\n    var selectedWeapon = weaponsForHero.find((item) => { return parseInt(item.id) === parseInt(selectedItemId); });\r\n\r\n    if (!selectedWeapon) {\r\n      selectedWeapon = weaponsForHero[0];\r\n        \r\n        updateState({\r\n          type: \"UPDATE_ITEM_SELECT\", \r\n          payload: { \r\n              id: parseInt(selectedWeapon.id),\r\n              type: itemType\r\n          }\r\n      });\r\n    }\r\n    \r\n    for (var i = 0; i < weaponsForHero.length; i++) {\r\n      var weapon = weaponsForHero[i];\r\n      weaponsContainerHtml.push(this.renderItem(weapon, itemType, parseInt(weapon.id) === parseInt(selectedItemId)));\r\n    }\r\n\r\n    return (\r\n        <div className=\"weapon-container\">\r\n            {weaponsContainerHtml}\r\n        </div>            \r\n    );\r\n  }\r\n\r\n  renderItem(item, itemType, selected) {\r\n    return <WeaponIcon key={item.id} id={item.id} slot={itemType} selected={selected} handleClick={this.itemSelectChanged.bind(this)}></WeaponIcon>;\r\n  }\r\n\r\n  itemSelectChanged(e) {\r\n    const [state, updateState] = this.context;\r\n    updateState({\r\n        type: \"UPDATE_ITEM_SELECT\", \r\n        payload: { \r\n            id: parseInt(e.currentTarget.dataset.id), \r\n            type: e.currentTarget.dataset.slot\r\n        }\r\n    });\r\n  }\r\n\r\n  handleItemClick(e) {\r\n\r\n    e.currentTarget.classList.add('selected');\r\n  }\r\n}\r\n\r\nexport default ItemSelect;"]},"metadata":{},"sourceType":"module"}