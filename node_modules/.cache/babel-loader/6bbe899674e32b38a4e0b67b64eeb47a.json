{"ast":null,"code":"import { heroesData } from '../data/Heroes';\nimport { meleeWeaponsData } from '../data/MeleeWeapons';\nimport { rangeWeaponsData } from '../data/RangeWeapons';\nimport { traitsData } from '../data/Traits';\nimport { propertiesData } from '../data/Properties';\nimport { PatchList } from '../data/PatchList';\nexport class DataHelper {}\n\nDataHelper.getCareer = careerId => {\n  for (var i = 0; i < heroesData.length; i++) {\n    if (heroesData[i].id === parseInt(careerId)) {\n      return heroesData[i];\n    }\n  }\n\n  return null;\n};\n\nDataHelper.getMeleeData = (careerId, id) => {\n  console.log('getting melee data for id ' + id);\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getRangeData = (careerId, id) => {\n  if (parseInt(careerId) !== 6 && parseInt(careerId) !== 16) {\n    return rangeWeaponsData.find(weapon => {\n      return parseInt(weapon.id) === parseInt(id);\n    });\n  }\n\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getTraitData = (id, type) => {\n  switch (type) {\n    case 'melee':\n      return traitsData.melee.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n\n    case 'range':\n      return traitsData.range.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'necklace':\n      return traitsData.necklace.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'charm':\n      return traitsData.charm.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'trinket':\n      return traitsData.trinket.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n  }\n\n  return null;\n};\n\nDataHelper.getPropertyData = (id, type) => {\n  return propertiesData.find(trait => {\n    return parseInt(trait.id) === parseInt(id);\n  });\n};\n\nDataHelper.getPatchFromDate = date => {\n  var filteredPatchList = PatchList.filter(patch => {\n    return patch.date < date;\n  });\n  return filteredPatchList[filteredPatchList.length - 1];\n};","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/utils/DataHelper.js"],"names":["heroesData","meleeWeaponsData","rangeWeaponsData","traitsData","propertiesData","PatchList","DataHelper","getCareer","careerId","i","length","id","parseInt","getMeleeData","console","log","find","weapon","getRangeData","getTraitData","type","melee","trait","range","necklace","charm","trinket","getPropertyData","getPatchFromDate","date","filteredPatchList","filter","patch"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,UAAR,QAAyB,gBAAzB;AACA,SAAQC,cAAR,QAA6B,oBAA7B;AACA,SAASC,SAAT,QAA0B,mBAA1B;AAEA,OAAO,MAAMC,UAAN,CAAiB;;AAAXA,U,CACFC,S,GAAaC,QAAD,IAAc;AAC7B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGT,UAAU,CAACU,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,QAAIT,UAAU,CAACS,CAAD,CAAV,CAAcE,EAAd,KAAqBC,QAAQ,CAACJ,QAAD,CAAjC,EAA6C;AAC3C,aAAOR,UAAU,CAACS,CAAD,CAAjB;AACD;AACF;;AACH,SAAO,IAAP;AACH,C;;AARQH,U,CASFO,Y,GAAe,CAACL,QAAD,EAAWG,EAAX,KAAkB;AACtCG,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BJ,EAA3C;AACA,SAAOV,gBAAgB,CAACe,IAAjB,CAAuBC,MAAD,IAAY;AAAE,WAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,GAAlF,CAAP;AACD,C;;AAZQL,U,CAaFY,Y,GAAe,CAACV,QAAD,EAAWG,EAAX,KAAkB;AACtC,MAAKC,QAAQ,CAACJ,QAAD,CAAR,KAAuB,CAAvB,IAA4BI,QAAQ,CAACJ,QAAD,CAAR,KAAuB,EAAxD,EAA6D;AAC3D,WAAON,gBAAgB,CAACc,IAAjB,CAAuBC,MAAD,IAAY;AAAE,aAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,KAAlF,CAAP;AACD;;AACD,SAAOV,gBAAgB,CAACe,IAAjB,CAAuBC,MAAD,IAAY;AAAE,WAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,GAAlF,CAAP;AACD,C;;AAlBQL,U,CAmBFa,Y,GAAe,CAACR,EAAD,EAAKS,IAAL,KAAc;AAClC,UAAQA,IAAR;AACE,SAAK,OAAL;AACE,aAAOjB,UAAU,CAACkB,KAAX,CAAiBL,IAAjB,CAAuBM,KAAD,IAAW;AAAE,eAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,OAAhF,CAAP;;AACF,SAAK,OAAL;AACE,aAAOR,UAAU,CAACoB,KAAX,CAAiBP,IAAjB,CAAuBM,KAAD,IAAW;AAAE,eAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,OAAhF,CAAP;AAAyF;;AAC3F,SAAK,UAAL;AACE,aAAOR,UAAU,CAACqB,QAAX,CAAoBR,IAApB,CAA0BM,KAAD,IAAW;AAAE,eAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,OAAnF,CAAP;AAA4F;;AAC9F,SAAK,OAAL;AACE,aAAOR,UAAU,CAACsB,KAAX,CAAiBT,IAAjB,CAAuBM,KAAD,IAAW;AAAE,eAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,OAAhF,CAAP;AAAyF;;AAC3F,SAAK,SAAL;AACE,aAAOR,UAAU,CAACuB,OAAX,CAAmBV,IAAnB,CAAyBM,KAAD,IAAW;AAAE,eAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,OAAlF,CAAP;AAA2F;AAV/F;;AAYA,SAAO,IAAP;AACD,C;;AAjCQL,U,CAkCFqB,e,GAAkB,CAAChB,EAAD,EAAKS,IAAL,KAAc;AACrC,SAAOhB,cAAc,CAACY,IAAf,CAAqBM,KAAD,IAAW;AAAE,WAAOV,QAAQ,CAACU,KAAK,CAACX,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,GAA9E,CAAP;AACD,C;;AApCQL,U,CAqCFsB,gB,GAAoBC,IAAD,IAAU;AAClC,MAAIC,iBAAiB,GAAGzB,SAAS,CAAC0B,MAAV,CAAkBC,KAAD,IAAW;AAChD,WAAOA,KAAK,CAACH,IAAN,GAAaA,IAApB;AACH,GAFuB,CAAxB;AAIA,SAAOC,iBAAiB,CAACA,iBAAiB,CAACpB,MAAlB,GAA2B,CAA5B,CAAxB;AACD,C","sourcesContent":["import {heroesData} from '../data/Heroes'\r\nimport {meleeWeaponsData} from '../data/MeleeWeapons'\r\nimport {rangeWeaponsData} from '../data/RangeWeapons'\r\nimport {traitsData} from '../data/Traits'\r\nimport {propertiesData} from '../data/Properties'\r\nimport { PatchList } from '../data/PatchList'\r\n\r\nexport class DataHelper {\r\n    static getCareer = (careerId) => {\r\n        for (var i = 0; i < heroesData.length; i++) {\r\n            if (heroesData[i].id === parseInt(careerId)) {\r\n              return heroesData[i];\r\n            }\r\n          }\r\n        return null;\r\n    }\r\n    static getMeleeData = (careerId, id) => {  \r\n      console.log('getting melee data for id ' + id);\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getRangeData = (careerId, id) => {\r\n      if ((parseInt(careerId) !== 6 && parseInt(careerId) !== 16)) {\r\n        return rangeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n      }\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getTraitData = (id, type) => {\r\n      switch (type) {\r\n        case 'melee':\r\n          return traitsData.melee.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n        case 'range':\r\n          return traitsData.range.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'necklace':\r\n          return traitsData.necklace.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'charm':\r\n          return traitsData.charm.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'trinket':\r\n          return traitsData.trinket.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n      }\r\n      return null;\r\n    }\r\n    static getPropertyData = (id, type) => {\r\n      return propertiesData.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n    }\r\n    static getPatchFromDate = (date) => {\r\n      var filteredPatchList = PatchList.filter((patch) => {\r\n          return patch.date < date;\r\n      });\r\n\r\n      return filteredPatchList[filteredPatchList.length - 1];\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}