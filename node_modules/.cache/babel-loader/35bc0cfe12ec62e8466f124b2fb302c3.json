{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\ranalds.gift\\\\src\\\\stores\\\\UserStore.js\";\nimport React from 'react';\nimport { AppContext } from './Store';\nimport { withRouter } from 'react-router';\nconst UserViewContext = React.createContext();\nexport { UserViewContext };\n\nfunction reducer(state, action) {\n  switch (action.type) {\n    case 'LOGIN_USER':\n      return { ...state,\n        username: action.payload.username,\n        email: action.payload.email\n      };\n\n    case 'UPDATE_USER_INFO':\n      console.log('updating user state ' + action.payload.userId);\n      return { ...state,\n        userId: action.payload.userId,\n        username: action.payload.username,\n        email: action.payload.email,\n        steam: action.payload.steam,\n        twitch: action.payload.twitch,\n        dateCreated: action.payload.dateCreated,\n        dateModified: action.payload.dateModified\n      };\n\n    default:\n      throw new Error('Error updating User Page state.');\n  }\n}\n\nexport default function UserViewStore(props) {\n  const stateHook = React.useReducer(reducer, {\n    userId: '',\n    username: '',\n    email: '',\n    steam: '',\n    twitch: '',\n    dateCreated: '',\n    dateModified: ''\n  });\n  return /*#__PURE__*/React.createElement(UserViewContext.Provider, {\n    value: stateHook,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, props.children);\n}","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/stores/UserStore.js"],"names":["React","AppContext","withRouter","UserViewContext","createContext","reducer","state","action","type","username","payload","email","console","log","userId","steam","twitch","dateCreated","dateModified","Error","UserViewStore","props","stateHook","useReducer","children"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,SAA3B;AACA,SAAQC,UAAR,QAAyB,cAAzB;AAEA,MAAMC,eAAe,GAAGH,KAAK,CAACI,aAAN,EAAxB;AAEA,SAAQD,eAAR;;AAEA,SAASE,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC5B,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,YAAL;AACI,aAAO,EAAC,GAAGF,KAAJ;AAAWG,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAAP,CAAeD,QAApC;AAA8CE,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAApE,OAAP;;AACJ,SAAK,kBAAL;AACIC,MAAAA,OAAO,CAACC,GAAR,CAAY,yBAAyBN,MAAM,CAACG,OAAP,CAAeI,MAApD;AACA,aAAO,EAAC,GAAGR,KAAJ;AACHQ,QAAAA,MAAM,EAAEP,MAAM,CAACG,OAAP,CAAeI,MADpB;AAEHL,QAAAA,QAAQ,EAAEF,MAAM,CAACG,OAAP,CAAeD,QAFtB;AAGHE,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC,KAHnB;AAIHI,QAAAA,KAAK,EAAER,MAAM,CAACG,OAAP,CAAeK,KAJnB;AAKHC,QAAAA,MAAM,EAAET,MAAM,CAACG,OAAP,CAAeM,MALpB;AAMHC,QAAAA,WAAW,EAAEV,MAAM,CAACG,OAAP,CAAeO,WANzB;AAOHC,QAAAA,YAAY,EAAEX,MAAM,CAACG,OAAP,CAAeQ;AAP1B,OAAP;;AASJ;AACI,YAAM,IAAIC,KAAJ,CAAU,iCAAV,CAAN;AAfR;AAiBH;;AAED,eAAe,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAEzC,QAAMC,SAAS,GAAGtB,KAAK,CAACuB,UAAN,CAAiBlB,OAAjB,EAA0B;AACxCS,IAAAA,MAAM,EAAE,EADgC;AAExCL,IAAAA,QAAQ,EAAE,EAF8B;AAGxCE,IAAAA,KAAK,EAAE,EAHiC;AAIxCI,IAAAA,KAAK,EAAE,EAJiC;AAKxCC,IAAAA,MAAM,EAAE,EALgC;AAMxCC,IAAAA,WAAW,EAAE,EAN2B;AAOxCC,IAAAA,YAAY,EAAE;AAP0B,GAA1B,CAAlB;AAUA,sBACI,oBAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAEI,SAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,KAAK,CAACG,QADX,CADJ;AAKH","sourcesContent":["import React from 'react'\r\nimport { AppContext } from './Store';\r\nimport {withRouter} from 'react-router';\r\n\r\nconst UserViewContext = React.createContext();\r\n\r\nexport {UserViewContext}\r\n\r\nfunction reducer(state, action) {\r\n    switch(action.type) {\r\n        case 'LOGIN_USER':\r\n            return {...state, username: action.payload.username, email: action.payload.email};\r\n        case 'UPDATE_USER_INFO':\r\n            console.log('updating user state ' + action.payload.userId);\r\n            return {...state, \r\n                userId: action.payload.userId, \r\n                username: action.payload.username, \r\n                email: action.payload.email, \r\n                steam: action.payload.steam, \r\n                twitch: action.payload.twitch, \r\n                dateCreated: action.payload.dateCreated, \r\n                dateModified: action.payload.dateModified \r\n            };\r\n        default:\r\n            throw new Error('Error updating User Page state.');\r\n    }\r\n}\r\n\r\nexport default function UserViewStore(props) {\r\n\r\n    const stateHook = React.useReducer(reducer, {\r\n        userId: '',\r\n        username: '',\r\n        email: '',\r\n        steam: '',\r\n        twitch: '',\r\n        dateCreated: '',\r\n        dateModified: ''\r\n    });\r\n\r\n    return (\r\n        <UserViewContext.Provider value={stateHook}>\r\n            {props.children}\r\n        </UserViewContext.Provider>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}