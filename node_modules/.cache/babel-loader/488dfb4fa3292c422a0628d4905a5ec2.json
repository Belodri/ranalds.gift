{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\utils\\\\DataHelper.js\";\nimport { heroesData } from '../data/Heroes';\nimport { meleeWeaponsData } from '../data/MeleeWeapons';\nimport { rangeWeaponsData } from '../data/RangeWeapons';\nimport { weaponsData } from '../data/Weapons';\nimport { traitsData } from '../data/Traits';\nimport { propertiesData } from '../data/Properties';\nimport { PatchList } from '../data/PatchList';\nimport { missionData } from '../data/Missions';\nimport { difficultyData } from '../data/Difficulties';\nimport { potionData } from '../data/Potions';\nimport { roleData } from '../data/Roles';\nimport { bookData } from '../data/Books';\nimport React from 'react';\nexport class DataHelper {}\n\nDataHelper.getCareer = careerId => {\n  for (var i = 0; i < heroesData.length; i++) {\n    if (heroesData[i].id === parseInt(careerId)) {\n      return heroesData[i];\n    }\n  }\n\n  return null;\n};\n\nDataHelper.getMeleeData = (careerId, id) => {\n  console.log('getting melee data for id ' + id);\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getRangeData = (careerId, id) => {\n  if (parseInt(careerId) !== 6 && parseInt(careerId) !== 16) {\n    return rangeWeaponsData.find(weapon => {\n      return parseInt(weapon.id) === parseInt(id);\n    });\n  }\n\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getTraitData = (id, type) => {\n  switch (type) {\n    case 'melee':\n      return traitsData.melee.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n\n    case 'range':\n      return traitsData.range.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'necklace':\n      return traitsData.necklace.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'charm':\n      return traitsData.charm.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    case 'trinket':\n      return traitsData.trinket.find(trait => {\n        return parseInt(trait.id) === parseInt(id);\n      });\n      ;\n\n    default:\n      return null;\n  }\n};\n\nDataHelper.getPropertyData = (id, type) => {\n  return propertiesData.find(trait => {\n    return parseInt(trait.id) === parseInt(id);\n  });\n};\n\nDataHelper.getPatchFromDate = date => {\n  var filteredPatchList = PatchList.filter(patch => {\n    return patch.date < date;\n  });\n  return filteredPatchList[filteredPatchList.length - 1];\n};\n\nDataHelper.getDaysSinceDate = date => {\n  var millisecondsPerDay = 24 * 60 * 60 * 1000;\n  return Math.floor((Date.parse(new Date()) - Date.parse(date)) / millisecondsPerDay);\n};\n\nDataHelper.getPatchFromDateForType = (date, updateType) => {\n  var filteredPatchList = PatchList.filter(patch => {\n    return patch.date < date && patch.type === updateType;\n  });\n  return filteredPatchList[filteredPatchList.length - 1];\n};\n\nDataHelper.getDataByIds = (data, ids) => {\n  return data.filter(item => {\n    return ids.includes(item.id);\n  });\n};\n\nDataHelper.getDifficultiesByIds = ids => {\n  return DataHelper.getDataByIds(difficultyData, ids);\n};\n\nDataHelper.getMissionData = () => {\n  return missionData;\n};\n\nDataHelper.getDifficultyData = () => {\n  return difficultyData;\n};\n\nDataHelper.getPotionData = () => {\n  return potionData;\n};\n\nDataHelper.getRoleData = () => {\n  return roleData;\n};\n\nDataHelper.getBookData = () => {\n  return bookData;\n};\n\nDataHelper.renderListOptions = data => {\n  let html = [];\n  data.forEach(item => {\n    html.push( /*#__PURE__*/React.createElement(\"option\", {\n      key: item.id,\n      value: item.id,\n      __self: DataHelper,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }\n    }, item.name));\n  });\n  return html;\n};\n\nDataHelper.getPropertiesForCategory = category => {\n  switch (category) {\n    case \"melee\":\n      return propertiesData.melee;\n\n    case \"range\":\n      return propertiesData.range;\n\n    case \"necklace\":\n      return propertiesData.necklace;\n\n    case \"charm\":\n      return propertiesData.charm;\n\n    case \"trinket\":\n      return propertiesData.trinket;\n  }\n};\n\nDataHelper.getPropertyFromCategory = (category, propertyId) => {\n  switch (category) {\n    case \"melee\":\n      return propertiesData.melee.find(property => {\n        return parseInt(property.id) === parseInt(propertyId);\n      });\n\n    case \"range\":\n      return propertiesData.range.find(property => {\n        return parseInt(property.id) === parseInt(propertyId);\n      });\n\n    case \"necklace\":\n      return propertiesData.necklace.find(property => {\n        return parseInt(property.id) === parseInt(propertyId);\n      });\n\n    case \"charm\":\n      return propertiesData.charm.find(property => {\n        return parseInt(property.id) === parseInt(propertyId);\n      });\n\n    case \"trinket\":\n      return propertiesData.trinket.find(property => {\n        return parseInt(property.id) === parseInt(propertyId);\n      });\n\n    default:\n      return null;\n  }\n};\n\nDataHelper.getTraitFromCategory = (category, traitId) => {\n  switch (category) {\n    case \"melee\":\n      return traitsData.melee.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    case \"range\":\n      return traitsData.range.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    case \"magic\":\n      return traitsData.magic.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    case \"necklace\":\n      return traitsData.necklace.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    case \"charm\":\n      return traitsData.charm.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    case \"trinket\":\n      return traitsData.trinket.find(property => {\n        return parseInt(property.id) === parseInt(traitId);\n      });\n\n    default:\n      return null;\n  }\n};\n\nDataHelper.getTraitsForCategory = category => {\n  switch (category) {\n    case \"melee\":\n      return traitsData.melee;\n\n    case \"range\":\n      return traitsData.range;\n\n    case \"magic\":\n      return traitsData.magic;\n\n    case \"necklace\":\n      return traitsData.necklace;\n\n    case \"charm\":\n      return traitsData.charm;\n\n    case \"trinket\":\n      return traitsData.trinket;\n  }\n};\n\nDataHelper.getWeapon = weaponId => {\n  //alert(weaponId);\n  return weaponsData.find(weapon => {\n    return weapon.id === parseInt(weaponId);\n  });\n};\n\nDataHelper.getTraitFromWeapon = (weaponId, traitId) => {\n  var weapon = DataHelper.getWeapon(weaponId);\n\n  if (!weapon) {\n    return;\n  }\n\n  return DataHelper.getTraitFromCategory(weapon.propertyCategory, traitId);\n};\n\nDataHelper.getPropertyFromWeapon = (weaponId, propertyId) => {\n  var weapon = DataHelper.getWeapon(weaponId);\n\n  if (!weapon) {\n    return;\n  }\n\n  return DataHelper.getPropertyFromCategory(weapon.propertyCategory, propertyId);\n};\n\nDataHelper.getPrimaryWeaponsForCareer = careerId => {\n  return weaponsData.filter(weapon => {\n    return weapon.canWieldPrimary.includes(parseInt(careerId));\n  });\n};\n\nDataHelper.getSecondaryWeaponsForCareer = careerId => {\n  return weaponsData.filter(weapon => {\n    return weapon.canWieldSecondary.includes(parseInt(careerId));\n  });\n};","map":{"version":3,"sources":["C:/dev/New folder/rg/src/utils/DataHelper.js"],"names":["heroesData","meleeWeaponsData","rangeWeaponsData","weaponsData","traitsData","propertiesData","PatchList","missionData","difficultyData","potionData","roleData","bookData","React","DataHelper","getCareer","careerId","i","length","id","parseInt","getMeleeData","console","log","find","weapon","getRangeData","getTraitData","type","melee","trait","range","necklace","charm","trinket","getPropertyData","getPatchFromDate","date","filteredPatchList","filter","patch","getDaysSinceDate","millisecondsPerDay","Math","floor","Date","parse","getPatchFromDateForType","updateType","getDataByIds","data","ids","item","includes","getDifficultiesByIds","getMissionData","getDifficultyData","getPotionData","getRoleData","getBookData","renderListOptions","html","forEach","push","name","getPropertiesForCategory","category","getPropertyFromCategory","propertyId","property","getTraitFromCategory","traitId","magic","getTraitsForCategory","getWeapon","weaponId","getTraitFromWeapon","propertyCategory","getPropertyFromWeapon","getPrimaryWeaponsForCareer","canWieldPrimary","getSecondaryWeaponsForCareer","canWieldSecondary"],"mappings":"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","sourcesContent":["import {heroesData} from '../data/Heroes'\r\nimport {meleeWeaponsData} from '../data/MeleeWeapons'\r\nimport {rangeWeaponsData} from '../data/RangeWeapons'\r\nimport {weaponsData} from '../data/Weapons'\r\nimport {traitsData} from '../data/Traits'\r\nimport {propertiesData} from '../data/Properties'\r\nimport { PatchList } from '../data/PatchList'\r\nimport {missionData} from '../data/Missions'\r\nimport {difficultyData} from '../data/Difficulties'\r\nimport {potionData} from '../data/Potions'\r\nimport {roleData} from '../data/Roles'\r\nimport {bookData} from '../data/Books'\r\nimport React from 'react';\r\n\r\nexport class DataHelper {\r\n    static getCareer = (careerId) => {\r\n        for (var i = 0; i < heroesData.length; i++) {\r\n            if (heroesData[i].id === parseInt(careerId)) {\r\n              return heroesData[i];\r\n            }\r\n          }\r\n        return null;\r\n    }\r\n    static getMeleeData = (careerId, id) => {  \r\n      console.log('getting melee data for id ' + id);\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getRangeData = (careerId, id) => {\r\n      if ((parseInt(careerId) !== 6 && parseInt(careerId) !== 16)) {\r\n        return rangeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n      }\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getTraitData = (id, type) => {\r\n      switch (type) {\r\n        case 'melee':\r\n          return traitsData.melee.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n        case 'range':\r\n          return traitsData.range.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'necklace':\r\n          return traitsData.necklace.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'charm':\r\n          return traitsData.charm.find((trait) => { return parseInt(trait.id) === parseInt(id); });;\r\n        case 'trinket':\r\n          return traitsData.trinket.find((trait) => { return parseInt(trait.id) === parseInt(id); });;  \r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n    static getPropertyData = (id, type) => {\r\n      return propertiesData.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n    }\r\n    static getPatchFromDate = (date) => {\r\n      var filteredPatchList = PatchList.filter((patch) => {\r\n          return patch.date < date;\r\n      });\r\n\r\n      return filteredPatchList[filteredPatchList.length - 1];\r\n    }\r\n\r\n    static getDaysSinceDate = (date) => {\r\n      var millisecondsPerDay = 24 * 60 * 60 * 1000;\r\n      return Math.floor((Date.parse(new Date()) - Date.parse(date)) / millisecondsPerDay);\r\n    }\r\n    \r\n    static getPatchFromDateForType = (date, updateType) => {\r\n      var filteredPatchList = PatchList.filter((patch) => {\r\n          return patch.date < date && patch.type === updateType;\r\n      });\r\n\r\n      return filteredPatchList[filteredPatchList.length - 1];\r\n    }\r\n\r\n    static getDataByIds = (data, ids) => {\r\n      return data.filter((item) => { return ids.includes(item.id); });\r\n    }\r\n\r\n    static getDifficultiesByIds = (ids) => {\r\n      return this.getDataByIds(difficultyData, ids);\r\n    }\r\n\r\n    static getMissionData = () => {\r\n      return missionData;\r\n    }\r\n    \r\n    static getDifficultyData = () => {\r\n      return difficultyData;\r\n    }\r\n    \r\n    static getPotionData = () => {\r\n      return potionData;\r\n    }\r\n    \r\n    static getRoleData = () => {\r\n      return roleData;\r\n    }\r\n\r\n    static getBookData = () => {\r\n      return bookData;\r\n    }\r\n\r\n    static renderListOptions = (data) => {\r\n      let html = [];\r\n      data.forEach(item => {\r\n          html.push(<option key={item.id} value={item.id}>{item.name}</option>);\r\n      });\r\n      return html;\r\n    }\r\n\r\n    static getPropertiesForCategory = (category) => {\r\n      switch (category) {\r\n        case \"melee\":\r\n          return propertiesData.melee;\r\n        case \"range\":\r\n          return propertiesData.range;\r\n        case \"necklace\":\r\n          return propertiesData.necklace;\r\n        case \"charm\":\r\n          return propertiesData.charm;\r\n        case \"trinket\":\r\n          return propertiesData.trinket;\r\n      }\r\n    }\r\n\r\n    static getPropertyFromCategory = (category, propertyId) => {\r\n      switch (category) {\r\n        case \"melee\":\r\n          return propertiesData.melee.find((property) => { return parseInt(property.id) === parseInt(propertyId); });\r\n        case \"range\":\r\n          return propertiesData.range.find((property) => { return parseInt(property.id) === parseInt(propertyId); });\r\n        case \"necklace\":\r\n          return propertiesData.necklace.find((property) => { return parseInt(property.id) === parseInt(propertyId); });\r\n        case \"charm\":\r\n          return propertiesData.charm.find((property) => { return parseInt(property.id) === parseInt(propertyId); });\r\n        case \"trinket\":\r\n          return propertiesData.trinket.find((property) => { return parseInt(property.id) === parseInt(propertyId); });\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n\r\n    static getTraitFromCategory = (category, traitId) => {\r\n      switch (category) {\r\n        case \"melee\":\r\n          return traitsData.melee.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        case \"range\":\r\n          return traitsData.range.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        case \"magic\":\r\n          return traitsData.magic.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        case \"necklace\":\r\n          return traitsData.necklace.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        case \"charm\":\r\n          return traitsData.charm.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        case \"trinket\":\r\n          return traitsData.trinket.find((property) => { return parseInt(property.id) === parseInt(traitId); });\r\n        default:\r\n          return null;\r\n      }\r\n    }\r\n\r\n    static getTraitsForCategory = (category) => {\r\n      switch (category) {\r\n        case \"melee\":\r\n          return traitsData.melee;\r\n        case \"range\":\r\n          return traitsData.range;\r\n        case \"magic\":\r\n          return traitsData.magic;\r\n        case \"necklace\":\r\n          return traitsData.necklace;\r\n        case \"charm\":\r\n          return traitsData.charm;\r\n        case \"trinket\":\r\n          return traitsData.trinket;   \r\n      }\r\n    }\r\n\r\n    static getWeapon = (weaponId) => {\r\n      //alert(weaponId);\r\n      return weaponsData.find((weapon) => { return weapon.id === parseInt(weaponId); });\r\n    }\r\n\r\n    static getTraitFromWeapon = (weaponId, traitId) => {\r\n      var weapon = this.getWeapon(weaponId);\r\n      if (!weapon) {\r\n        return;\r\n      }\r\n      return this.getTraitFromCategory(weapon.propertyCategory, traitId);\r\n    }\r\n\r\n    static getPropertyFromWeapon = (weaponId, propertyId) => {\r\n      var weapon = this.getWeapon(weaponId);\r\n      if (!weapon) {\r\n        return;\r\n      }\r\n      return this.getPropertyFromCategory(weapon.propertyCategory, propertyId);\r\n    }\r\n\r\n    static getPrimaryWeaponsForCareer = (careerId) => {\r\n      return weaponsData.filter((weapon) => { return weapon.canWieldPrimary.includes(parseInt(careerId)); });\r\n    }\r\n\r\n    static getSecondaryWeaponsForCareer = (careerId) => {\r\n      return weaponsData.filter((weapon) => { return weapon.canWieldSecondary.includes(parseInt(careerId)); });\r\n    }\r\n  }"]},"metadata":{},"sourceType":"module"}