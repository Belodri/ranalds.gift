{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\New folder\\\\rg\\\\src\\\\components\\\\select\\\\DifficultySelect.js\";\nimport React, { Component } from 'react';\nimport { DataHelper } from '../../utils/DataHelper';\nimport { Multiselect } from 'multiselect-react-dropdown';\nimport { AppContext } from '../../stores/Store';\n\nclass DifficultySelect extends Component {\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    let onSelectHandler = this.props.onSelectHandler ? this.props.onSelectHandler : difficultySelectChange;\n    return /*#__PURE__*/React.createElement(Multiselect, {\n      className: \"test\",\n      closeIcon: \"cancel\",\n      closeOnSelect: \"false\",\n      options: DataHelper.getDifficultyData(),\n      selectedValues: this.props.selectedValues,\n      displayValue: \"name\",\n      placeholder: \"Difficulty\",\n      hidePlaceholder: \"true\",\n      onSelect: onSelectHandler,\n      onRemove: this.props.onRemoveHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }\n    });\n  }\n\n  difficultySelectChange(e) {\n    const [state, updateState] = this.context;\n    console.log(e.currentTarget);\n    console.log(e.target.value);\n    updateState({\n      type: \"UPDATE_DIFFICULTY\",\n      payload: e.target.value\n    });\n  }\n\n}\n\nDifficultySelect.contextType = AppContext;\nexport default DifficultySelect;","map":{"version":3,"sources":["C:/dev/New folder/rg/src/components/select/DifficultySelect.js"],"names":["React","Component","DataHelper","Multiselect","AppContext","DifficultySelect","constructor","props","render","onSelectHandler","difficultySelectChange","getDifficultyData","selectedValues","onRemoveHandler","e","state","updateState","context","console","log","currentTarget","target","value","type","payload","contextType"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAASC,UAAT,QAA2B,wBAA3B;AACA,SAASC,WAAT,QAA4B,4BAA5B;AACA,SAASC,UAAT,QAA2B,oBAA3B;;AAEA,MAAMC,gBAAN,SAA+BJ,SAA/B,CAAyC;AAGrCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACH;;AAEHC,EAAAA,MAAM,GAAG;AACL,QAAIC,eAAe,GAAG,KAAKF,KAAL,CAAWE,eAAX,GAA6B,KAAKF,KAAL,CAAWE,eAAxC,GAA0DC,sBAAhF;AAGA,wBACE,oBAAC,WAAD;AAAa,MAAA,SAAS,EAAC,MAAvB;AAA8B,MAAA,SAAS,EAAC,QAAxC;AAAiD,MAAA,aAAa,EAAC,OAA/D;AAAwE,MAAA,OAAO,EAAER,UAAU,CAACS,iBAAX,EAAjF;AAAiH,MAAA,cAAc,EAAE,KAAKJ,KAAL,CAAWK,cAA5I;AAA4J,MAAA,YAAY,EAAC,MAAzK;AAAgL,MAAA,WAAW,EAAC,YAA5L;AAAyM,MAAA,eAAe,EAAC,MAAzN;AAAgO,MAAA,QAAQ,EAAEH,eAA1O;AAA2P,MAAA,QAAQ,EAAE,KAAKF,KAAL,CAAWM,eAAhR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGH;;AAEDH,EAAAA,sBAAsB,CAACI,CAAD,EAAI;AACxB,UAAM,CAACC,KAAD,EAAQC,WAAR,IAAuB,KAAKC,OAAlC;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACM,aAAd;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYL,CAAC,CAACO,MAAF,CAASC,KAArB;AAEAN,IAAAA,WAAW,CAAC;AACRO,MAAAA,IAAI,EAAE,mBADE;AAERC,MAAAA,OAAO,EAAEV,CAAC,CAACO,MAAF,CAASC;AAFV,KAAD,CAAX;AAID;;AAzBsC;;AAAnCjB,gB,CACGoB,W,GAAcrB,U;AA4BvB,eAAeC,gBAAf","sourcesContent":["import React, {Component} from 'react';\r\nimport { DataHelper } from '../../utils/DataHelper';\r\nimport { Multiselect } from 'multiselect-react-dropdown';\r\nimport { AppContext } from '../../stores/Store';\r\n\r\nclass DifficultySelect extends Component {\r\n  static contextType = AppContext;\r\n\r\n    constructor(props) {\r\n        super(props);\r\n    }\r\n\r\n  render() {\r\n      let onSelectHandler = this.props.onSelectHandler ? this.props.onSelectHandler : difficultySelectChange;\r\n\r\n\r\n      return (\r\n        <Multiselect className=\"test\" closeIcon=\"cancel\" closeOnSelect=\"false\"  options={DataHelper.getDifficultyData()} selectedValues={this.props.selectedValues} displayValue=\"name\" placeholder=\"Difficulty\" hidePlaceholder=\"true\" onSelect={onSelectHandler} onRemove={this.props.onRemoveHandler}></Multiselect>\r\n    );\r\n  }\r\n\r\n  difficultySelectChange(e) {\r\n    const [state, updateState] = this.context;\r\n    console.log(e.currentTarget);\r\n    console.log(e.target.value);\r\n\r\n    updateState({\r\n        type: \"UPDATE_DIFFICULTY\", \r\n        payload: e.target.value\r\n    });\r\n  }\r\n\r\n}\r\n\r\nexport default DifficultySelect;"]},"metadata":{},"sourceType":"module"}