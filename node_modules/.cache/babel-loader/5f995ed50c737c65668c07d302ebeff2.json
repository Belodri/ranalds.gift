{"ast":null,"code":"import { heroesData } from '../data/Heroes';\nimport { meleeWeaponsData } from '../data/MeleeWeapons';\nimport { rangeWeaponsData } from '../data/RangeWeapons';\nimport { traitData } from '../data/Traits';\nimport { propertyData } from '../data/Properties';\nexport class DataHelper {}\n\nDataHelper.getCareer = careerId => {\n  for (var i = 0; i < heroesData.length; i++) {\n    if (heroesData[i].id === parseInt(careerId)) {\n      return heroesData[i];\n    }\n  }\n\n  return null;\n};\n\nDataHelper.getMeleeData = (careerId, id) => {\n  console.log('getting melee data for id ' + id);\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getRangeData = (careerId, id) => {\n  if (parseInt(careerId) !== 6 && parseInt(careerId) !== 16) {\n    return rangeWeaponsData.find(weapon => {\n      return parseInt(weapon.id) === parseInt(id);\n    });\n  }\n\n  return meleeWeaponsData.find(weapon => {\n    return parseInt(weapon.id) === parseInt(id);\n  });\n};\n\nDataHelper.getTraitData = id => {\n  return traitData.find(trait => {\n    return parseInt(trait.id) === parseInt(id);\n  });\n};\n\nDataHelper.getPropertyData = id => {\n  return propertyData.find(trait => {\n    return parseInt(trait.id) === parseInt(id);\n  });\n};","map":{"version":3,"sources":["C:/dev/ranalds.gift/src/utils/DataHelper.js"],"names":["heroesData","meleeWeaponsData","rangeWeaponsData","traitData","propertyData","DataHelper","getCareer","careerId","i","length","id","parseInt","getMeleeData","console","log","find","weapon","getRangeData","getTraitData","trait","getPropertyData"],"mappings":"AAAA,SAAQA,UAAR,QAAyB,gBAAzB;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,gBAAR,QAA+B,sBAA/B;AACA,SAAQC,SAAR,QAAwB,gBAAxB;AACA,SAAQC,YAAR,QAA2B,oBAA3B;AAEA,OAAO,MAAMC,UAAN,CAAiB;;AAAXA,U,CACFC,S,GAAaC,QAAD,IAAc;AAC7B,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGR,UAAU,CAACS,MAA/B,EAAuCD,CAAC,EAAxC,EAA4C;AACxC,QAAIR,UAAU,CAACQ,CAAD,CAAV,CAAcE,EAAd,KAAqBC,QAAQ,CAACJ,QAAD,CAAjC,EAA6C;AAC3C,aAAOP,UAAU,CAACQ,CAAD,CAAjB;AACD;AACF;;AACH,SAAO,IAAP;AACH,C;;AARQH,U,CASFO,Y,GAAe,CAACL,QAAD,EAAWG,EAAX,KAAkB;AACtCG,EAAAA,OAAO,CAACC,GAAR,CAAY,+BAA+BJ,EAA3C;AACA,SAAOT,gBAAgB,CAACc,IAAjB,CAAuBC,MAAD,IAAY;AAAE,WAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,GAAlF,CAAP;AACD,C;;AAZQL,U,CAaFY,Y,GAAe,CAACV,QAAD,EAAWG,EAAX,KAAkB;AACtC,MAAKC,QAAQ,CAACJ,QAAD,CAAR,KAAuB,CAAvB,IAA4BI,QAAQ,CAACJ,QAAD,CAAR,KAAuB,EAAxD,EAA6D;AAC3D,WAAOL,gBAAgB,CAACa,IAAjB,CAAuBC,MAAD,IAAY;AAAE,aAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,KAAlF,CAAP;AACD;;AACD,SAAOT,gBAAgB,CAACc,IAAjB,CAAuBC,MAAD,IAAY;AAAE,WAAOL,QAAQ,CAACK,MAAM,CAACN,EAAR,CAAR,KAAwBC,QAAQ,CAACD,EAAD,CAAvC;AAA8C,GAAlF,CAAP;AACD,C;;AAlBQL,U,CAmBFa,Y,GAAgBR,EAAD,IAAQ;AAC5B,SAAOP,SAAS,CAACY,IAAV,CAAgBI,KAAD,IAAW;AAAE,WAAOR,QAAQ,CAACQ,KAAK,CAACT,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,GAAzE,CAAP;AACD,C;;AArBQL,U,CAsBFe,e,GAAmBV,EAAD,IAAQ;AAC/B,SAAON,YAAY,CAACW,IAAb,CAAmBI,KAAD,IAAW;AAAE,WAAOR,QAAQ,CAACQ,KAAK,CAACT,EAAP,CAAR,KAAuBC,QAAQ,CAACD,EAAD,CAAtC;AAA6C,GAA5E,CAAP;AACD,C","sourcesContent":["import {heroesData} from '../data/Heroes'\r\nimport {meleeWeaponsData} from '../data/MeleeWeapons'\r\nimport {rangeWeaponsData} from '../data/RangeWeapons'\r\nimport {traitData} from '../data/Traits'\r\nimport {propertyData} from '../data/Properties'\r\n\r\nexport class DataHelper {\r\n    static getCareer = (careerId) => {\r\n        for (var i = 0; i < heroesData.length; i++) {\r\n            if (heroesData[i].id === parseInt(careerId)) {\r\n              return heroesData[i];\r\n            }\r\n          }\r\n        return null;\r\n    }\r\n    static getMeleeData = (careerId, id) => {  \r\n      console.log('getting melee data for id ' + id);\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getRangeData = (careerId, id) => {\r\n      if ((parseInt(careerId) !== 6 && parseInt(careerId) !== 16)) {\r\n        return rangeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n      }\r\n      return meleeWeaponsData.find((weapon) => { return parseInt(weapon.id) === parseInt(id); });\r\n    }\r\n    static getTraitData = (id) => {\r\n      return traitData.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n    }\r\n    static getPropertyData = (id) => {\r\n      return propertyData.find((trait) => { return parseInt(trait.id) === parseInt(id); });\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}